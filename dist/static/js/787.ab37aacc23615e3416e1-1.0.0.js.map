{"version":3,"file":"static/js/787.ab37aacc23615e3416e1-1.0.0.js","mappings":"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","sources":["webpack://gxygy-ldjsc/./node_modules/vue-count-to/dist/vue-count-to.min.js","webpack://gxygy-ldjsc/./node_modules/@turf/helpers/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/meta/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/bbox/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/invariant/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/clean-coords/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/clone/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/simplify/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/bezier-spline/dist/es/lib/spline.js","webpack://gxygy-ldjsc/./node_modules/@turf/envelope/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/bbox-polygon/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/great-circle/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/isobands/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/@turf/polygonize/dist/es/lib/util.js","webpack://gxygy-ldjsc/./node_modules/@turf/polygonize/dist/es/lib/Node.js","webpack://gxygy-ldjsc/./node_modules/@turf/polygonize/dist/es/lib/Edge.js","webpack://gxygy-ldjsc/./node_modules/@turf/polygonize/dist/es/lib/EdgeRing.js","webpack://gxygy-ldjsc/./node_modules/@turf/polygonize/dist/es/lib/Graph.js","webpack://gxygy-ldjsc/./node_modules/@turf/shortest-path/dist/es/index.js","webpack://gxygy-ldjsc/./node_modules/ol/AssertionError.js","webpack://gxygy-ldjsc/./node_modules/ol/ImageState.js","webpack://gxygy-ldjsc/./node_modules/ol/Object.js","webpack://gxygy-ldjsc/./node_modules/ol/ObjectEventType.js","webpack://gxygy-ldjsc/./node_modules/ol/Observable.js","webpack://gxygy-ldjsc/./node_modules/ol/MapEventType.js","webpack://gxygy-ldjsc/./node_modules/ol/OverlayPositioning.js","webpack://gxygy-ldjsc/./node_modules/ol/Overlay.js","webpack://gxygy-ldjsc/./node_modules/ol/array.js","webpack://gxygy-ldjsc/./node_modules/ol/asserts.js","webpack://gxygy-ldjsc/./node_modules/ol/color.js","webpack://gxygy-ldjsc/./node_modules/ol/colorlike.js","webpack://gxygy-ldjsc/./node_modules/ol/css.js","webpack://gxygy-ldjsc/./node_modules/ol/dom.js","webpack://gxygy-ldjsc/./node_modules/ol/events.js","webpack://gxygy-ldjsc/./node_modules/ol/events/Event.js","webpack://gxygy-ldjsc/./node_modules/ol/events/EventType.js","webpack://gxygy-ldjsc/./node_modules/ol/Disposable.js","webpack://gxygy-ldjsc/./node_modules/ol/events/Target.js","webpack://gxygy-ldjsc/./node_modules/ol/extent.js","webpack://gxygy-ldjsc/./node_modules/ol/extent/Relationship.js","webpack://gxygy-ldjsc/./node_modules/ol/format/FormatType.js","webpack://gxygy-ldjsc/./node_modules/ol/Feature.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/GeometryCollection.js","webpack://gxygy-ldjsc/./node_modules/ol/format/Feature.js","webpack://gxygy-ldjsc/./node_modules/ol/format/JSONFeature.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/closest.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/deflate.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/segments.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/interpolate.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/contains.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/intersectsextent.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/LineString.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/MultiLineString.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/Point.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/MultiPoint.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/area.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/LinearRing.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/interiorpoint.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/reverse.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/orient.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/Polygon.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/MultiPolygon.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/center.js","webpack://gxygy-ldjsc/./node_modules/ol/format/GeoJSON.js","webpack://gxygy-ldjsc/./node_modules/ol/functions.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/Geometry.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/GeometryLayout.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/GeometryType.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/SimpleGeometry.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/inflate.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/length.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/simplify.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/transform.js","webpack://gxygy-ldjsc/./node_modules/ol/has.js","webpack://gxygy-ldjsc/./node_modules/ol/layer/Property.js","webpack://gxygy-ldjsc/./node_modules/ol/layer/Base.js","webpack://gxygy-ldjsc/./node_modules/ol/render/EventType.js","webpack://gxygy-ldjsc/./node_modules/ol/layer/Layer.js","webpack://gxygy-ldjsc/./node_modules/ol/layer/BaseVector.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/Instruction.js","webpack://gxygy-ldjsc/./node_modules/ol/render/VectorContext.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/Builder.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/straightchunk.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/TextBuilder.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://gxygy-ldjsc/./node_modules/ol/renderer/Layer.js","webpack://gxygy-ldjsc/./node_modules/ol/render/Event.js","webpack://gxygy-ldjsc/./node_modules/ol/renderer/canvas/Layer.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/BuilderType.js","webpack://gxygy-ldjsc/./node_modules/ol/geom/flat/textpath.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/Executor.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://gxygy-ldjsc/./node_modules/ol/ViewHint.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/Immediate.js","webpack://gxygy-ldjsc/./node_modules/ol/style/IconAnchorUnits.js","webpack://gxygy-ldjsc/./node_modules/ol/style/IconOrigin.js","webpack://gxygy-ldjsc/./node_modules/ol/style/IconImageCache.js","webpack://gxygy-ldjsc/./node_modules/ol/ImageBase.js","webpack://gxygy-ldjsc/./node_modules/ol/Image.js","webpack://gxygy-ldjsc/./node_modules/ol/style/IconImage.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Icon.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas/hitdetect.js","webpack://gxygy-ldjsc/./node_modules/ol/renderer/vector.js","webpack://gxygy-ldjsc/./node_modules/ol/coordinate.js","webpack://gxygy-ldjsc/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://gxygy-ldjsc/./node_modules/ol/layer/Vector.js","webpack://gxygy-ldjsc/./node_modules/ol/math.js","webpack://gxygy-ldjsc/./node_modules/ol/obj.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/Projection.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/epsg3857.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/epsg4326.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/projections.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/transforms.js","webpack://gxygy-ldjsc/./node_modules/ol/proj.js","webpack://gxygy-ldjsc/./node_modules/ol/proj/Units.js","webpack://gxygy-ldjsc/./node_modules/ol/render/canvas.js","webpack://gxygy-ldjsc/./node_modules/ol/size.js","webpack://gxygy-ldjsc/./node_modules/ol/source/State.js","webpack://gxygy-ldjsc/./node_modules/ol/CollectionEventType.js","webpack://gxygy-ldjsc/./node_modules/ol/Collection.js","webpack://gxygy-ldjsc/./node_modules/ol/structs/RBush.js","webpack://gxygy-ldjsc/./node_modules/ol/source/Source.js","webpack://gxygy-ldjsc/./node_modules/ol/source/VectorEventType.js","webpack://gxygy-ldjsc/./node_modules/ol/loadingstrategy.js","webpack://gxygy-ldjsc/./node_modules/ol/featureloader.js","webpack://gxygy-ldjsc/./node_modules/ol/source/Vector.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Fill.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Image.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Stroke.js","webpack://gxygy-ldjsc/./node_modules/ol/style/RegularShape.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Circle.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Style.js","webpack://gxygy-ldjsc/./node_modules/ol/style/Text.js","webpack://gxygy-ldjsc/./node_modules/ol/style/TextPlacement.js","webpack://gxygy-ldjsc/./node_modules/ol/transform.js","webpack://gxygy-ldjsc/./node_modules/ol/util.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=2)}([function(t,e,i){var n=i(4)(i(1),i(5),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(3);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},watch:{startVal:function(){this.autoplay&&this.start()},endVal:function(){this.autoplay&&this.start()}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(0),a=function(t){return t&&t.__esModule?t:{default:t}}(n);e.default=a.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",a.default)},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=0,a=\"webkit moz ms o\".split(\" \"),r=void 0,o=void 0;if(\"undefined\"==typeof window)e.requestAnimationFrame=r=function(){},e.cancelAnimationFrame=o=function(){};else{e.requestAnimationFrame=r=window.requestAnimationFrame,e.cancelAnimationFrame=o=window.cancelAnimationFrame;for(var s=void 0,u=0;u<a.length&&(!r||!o);u++)s=a[u],e.requestAnimationFrame=r=r||window[s+\"RequestAnimationFrame\"],e.cancelAnimationFrame=o=o||window[s+\"CancelAnimationFrame\"]||window[s+\"CancelRequestAnimationFrame\"];r&&o||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=o=function(t){window.clearTimeout(t)})}e.requestAnimationFrame=r,e.cancelAnimationFrame=o},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},o=typeof t.default;\"object\"!==o&&\"function\"!==o||(a=t,r=t.default);var s=\"function\"==typeof r?r.options:r;if(e&&(s.render=e.render,s.staticRenderFns=e.staticRenderFns),i&&(s._scopeId=i),n){var u=Object.create(s.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),s.computed=u}return{esModule:a,exports:r,options:s}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}}])});\n//# sourceMappingURL=vue-count-to.min.js.map","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","import { feature } from \"@turf/helpers\";\nimport { getCoords, getType } from \"@turf/invariant\";\n// To-Do => Improve Typescript GeoJSON handling\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Backwards compatible with v4.0\n    var mutate = typeof options === \"object\" ? options.mutate : options;\n    if (!geojson)\n        throw new Error(\"geojson is required\");\n    var type = getType(geojson);\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n    switch (type) {\n        case \"LineString\":\n            newCoords = cleanLine(geojson);\n            break;\n        case \"MultiLineString\":\n        case \"Polygon\":\n            getCoords(geojson).forEach(function (line) {\n                newCoords.push(cleanLine(line));\n            });\n            break;\n        case \"MultiPolygon\":\n            getCoords(geojson).forEach(function (polygons) {\n                var polyPoints = [];\n                polygons.forEach(function (ring) {\n                    polyPoints.push(cleanLine(ring));\n                });\n                newCoords.push(polyPoints);\n            });\n            break;\n        case \"Point\":\n            return geojson;\n        case \"MultiPoint\":\n            var existing = {};\n            getCoords(geojson).forEach(function (coord) {\n                var key = coord.join(\"-\");\n                if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n                    newCoords.push(coord);\n                    existing[key] = true;\n                }\n            });\n            break;\n        default:\n            throw new Error(type + \" geometry not supported\");\n    }\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return { type: type, coordinates: newCoords };\n    }\n    else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({ type: type, coordinates: newCoords }, geojson.properties, {\n            bbox: geojson.bbox,\n            id: geojson.id,\n        });\n    }\n}\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1]))\n        return points;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n    var newPointsLength = newPoints.length;\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        var prevAddedPoint = newPoints[newPoints.length - 1];\n        if (points[i][0] === prevAddedPoint[0] &&\n            points[i][1] === prevAddedPoint[1])\n            continue;\n        else {\n            newPoints.push(points[i]);\n            newPointsLength = newPoints.length;\n            if (newPointsLength > 2) {\n                if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2]))\n                    newPoints.splice(newPoints.length - 2, 1);\n            }\n        }\n    }\n    newPoints.push(points[points.length - 1]);\n    newPointsLength = newPoints.length;\n    if (equals(points[0], points[points.length - 1]) && newPointsLength < 4)\n        throw new Error(\"invalid polygon\");\n    if (isPointOnLineSegment(newPoints[newPointsLength - 3], newPoints[newPointsLength - 1], newPoints[newPointsLength - 2]))\n        newPoints.splice(newPoints.length - 2, 1);\n    return newPoints;\n}\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0)\n        return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl))\n        return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else\n        return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\nexport default cleanCoords;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","import cleanCoords from '@turf/clean-coords';\nimport clone from '@turf/clone';\nimport { geomEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/*\n (c) 2013, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n  var dx = p1.x - p2.x,\n    dy = p1.y - p2.y;\n\n  return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p, p1, p2) {\n  var x = p1.x,\n    y = p1.y,\n    dx = p2.x - x,\n    dy = p2.y - y;\n\n  if (dx !== 0 || dy !== 0) {\n    var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2.x;\n      y = p2.y;\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n  }\n\n  dx = p.x - x;\n  dy = p.y - y;\n\n  return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points, sqTolerance) {\n  var prevPoint = points[0],\n    newPoints = [prevPoint],\n    point;\n\n  for (var i = 1, len = points.length; i < len; i++) {\n    point = points[i];\n\n    if (getSqDist(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\nfunction simplifyDPStep(points, first, last, sqTolerance, simplified) {\n  var maxSqDist = sqTolerance,\n    index;\n\n  for (var i = first + 1; i < last; i++) {\n    var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1)\n      simplifyDPStep(points, first, index, sqTolerance, simplified);\n    simplified.push(points[index]);\n    if (last - index > 1)\n      simplifyDPStep(points, index, last, sqTolerance, simplified);\n  }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n  var last = points.length - 1;\n\n  var simplified = [points[0]];\n  simplifyDPStep(points, 0, last, sqTolerance, simplified);\n  simplified.push(points[last]);\n\n  return simplified;\n}\n\n// both algorithms combined for awesome performance\nfunction simplify(points, tolerance, highestQuality) {\n  if (points.length <= 2) return points;\n\n  var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n  points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n  points = simplifyDouglasPeucker(points, sqTolerance);\n\n  return points;\n}\n\n/**\n * Takes a {@link GeoJSON} object and returns a simplified version. Internally uses\n * [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification using the Ramer-Douglas-Peucker algorithm.\n *\n * @name simplify\n * @param {GeoJSON} geojson object to be simplified\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=1] simplification tolerance\n * @param {boolean} [options.highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a simplified GeoJSON\n * @example\n * var geojson = turf.polygon([[\n *   [-70.603637, -33.399918],\n *   [-70.614624, -33.395332],\n *   [-70.639343, -33.392466],\n *   [-70.659942, -33.394759],\n *   [-70.683975, -33.404504],\n *   [-70.697021, -33.419406],\n *   [-70.701141, -33.434306],\n *   [-70.700454, -33.446339],\n *   [-70.694274, -33.458369],\n *   [-70.682601, -33.465816],\n *   [-70.668869, -33.472117],\n *   [-70.646209, -33.473835],\n *   [-70.624923, -33.472117],\n *   [-70.609817, -33.468107],\n *   [-70.595397, -33.458369],\n *   [-70.587158, -33.442901],\n *   [-70.587158, -33.426283],\n *   [-70.590591, -33.414248],\n *   [-70.594711, -33.406224],\n *   [-70.603637, -33.399918]\n * ]]);\n * var options = {tolerance: 0.01, highQuality: false};\n * var simplified = turf.simplify(geojson, options);\n *\n * //addToMap\n * var addToMap = [geojson, simplified]\n */\nfunction simplify$1(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var tolerance = options.tolerance !== undefined ? options.tolerance : 1;\n  var highQuality = options.highQuality || false;\n  var mutate = options.mutate || false;\n\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (tolerance && tolerance < 0) throw new Error(\"invalid tolerance\");\n\n  // Clone geojson to avoid side effects\n  if (mutate !== true) geojson = clone(geojson);\n\n  geomEach(geojson, function (geom) {\n    simplifyGeom(geom, tolerance, highQuality);\n  });\n  return geojson;\n}\n\n/**\n * Simplifies a feature's coordinates\n *\n * @private\n * @param {Geometry} geometry to be simplified\n * @param {number} [tolerance=1] simplification tolerance\n * @param {boolean} [highQuality=false] whether or not to spend more time to create a higher-quality simplification with a different algorithm\n * @returns {Geometry} output\n */\nfunction simplifyGeom(geometry, tolerance, highQuality) {\n  var type = geometry.type;\n\n  // \"unsimplyfiable\" geometry types\n  if (type === \"Point\" || type === \"MultiPoint\") return geometry;\n\n  // Remove any extra coordinates\n  cleanCoords(geometry, true);\n\n  var coordinates = geometry.coordinates;\n  switch (type) {\n    case \"LineString\":\n      geometry[\"coordinates\"] = simplifyLine(\n        coordinates,\n        tolerance,\n        highQuality\n      );\n      break;\n    case \"MultiLineString\":\n      geometry[\"coordinates\"] = coordinates.map(function (lines) {\n        return simplifyLine(lines, tolerance, highQuality);\n      });\n      break;\n    case \"Polygon\":\n      geometry[\"coordinates\"] = simplifyPolygon(\n        coordinates,\n        tolerance,\n        highQuality\n      );\n      break;\n    case \"MultiPolygon\":\n      geometry[\"coordinates\"] = coordinates.map(function (rings) {\n        return simplifyPolygon(rings, tolerance, highQuality);\n      });\n  }\n  return geometry;\n}\n\n/**\n * Simplifies the coordinates of a LineString with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<number>>} simplified coords\n */\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n  return simplify(\n    coordinates.map(function (coord) {\n      return { x: coord[0], y: coord[1], z: coord[2] };\n    }),\n    tolerance,\n    highQuality\n  ).map(function (coords) {\n    return coords.z ? [coords.x, coords.y, coords.z] : [coords.x, coords.y];\n  });\n}\n\n/**\n * Simplifies the coordinates of a Polygon with simplify-js\n *\n * @private\n * @param {Array<number>} coordinates to be processed\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create a higher-quality\n * @returns {Array<Array<Array<number>>>} simplified coords\n */\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n  return coordinates.map(function (ring) {\n    var pts = ring.map(function (coord) {\n      return { x: coord[0], y: coord[1] };\n    });\n    if (pts.length < 4) {\n      throw new Error(\"invalid polygon\");\n    }\n    var simpleRing = simplify(pts, tolerance, highQuality).map(function (\n      coords\n    ) {\n      return [coords.x, coords.y];\n    });\n    //remove 1 percent of tolerance until enough points to make a triangle\n    while (!checkValidity(simpleRing)) {\n      tolerance -= tolerance * 0.01;\n      simpleRing = simplify(pts, tolerance, highQuality).map(function (\n        coords\n      ) {\n        return [coords.x, coords.y];\n      });\n    }\n    if (\n      simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0] ||\n      simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1]\n    ) {\n      simpleRing.push(simpleRing[0]);\n    }\n    return simpleRing;\n  });\n}\n\n/**\n * Returns true if ring has at least 3 coordinates and its first coordinate is the same as its last\n *\n * @private\n * @param {Array<number>} ring coordinates to be checked\n * @returns {boolean} true if valid\n */\nfunction checkValidity(ring) {\n  if (ring.length < 3) return false;\n  //if the last point is the same as the first, it's not a triangle\n  return !(\n    ring.length === 3 &&\n    ring[2][0] === ring[0][0] &&\n    ring[2][1] === ring[0][1]\n  );\n}\n\nexport default simplify$1;\n","/**\n * BezierSpline\n * https://github.com/leszekr/bezier-spline-js\n *\n * @private\n * @copyright\n * Copyright (c) 2013 Leszek Rybicki\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar Spline = /** @class */ (function () {\n    function Spline(options) {\n        this.points = options.points || [];\n        this.duration = options.duration || 10000;\n        this.sharpness = options.sharpness || 0.85;\n        this.centers = [];\n        this.controls = [];\n        this.stepLength = options.stepLength || 60;\n        this.length = this.points.length;\n        this.delay = 0;\n        // this is to ensure compatibility with the 2d version\n        for (var i = 0; i < this.length; i++) {\n            this.points[i].z = this.points[i].z || 0;\n        }\n        for (var i = 0; i < this.length - 1; i++) {\n            var p1 = this.points[i];\n            var p2 = this.points[i + 1];\n            this.centers.push({\n                x: (p1.x + p2.x) / 2,\n                y: (p1.y + p2.y) / 2,\n                z: (p1.z + p2.z) / 2,\n            });\n        }\n        this.controls.push([this.points[0], this.points[0]]);\n        for (var i = 0; i < this.centers.length - 1; i++) {\n            var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n            var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n            var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n            this.controls.push([\n                {\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\n                        this.sharpness * (this.centers[i].x + dx),\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\n                        this.sharpness * (this.centers[i].y + dy),\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\n                        this.sharpness * (this.centers[i].z + dz),\n                },\n                {\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\n                        this.sharpness * (this.centers[i + 1].x + dx),\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\n                        this.sharpness * (this.centers[i + 1].y + dy),\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\n                        this.sharpness * (this.centers[i + 1].z + dz),\n                },\n            ]);\n        }\n        this.controls.push([\n            this.points[this.length - 1],\n            this.points[this.length - 1],\n        ]);\n        this.steps = this.cacheSteps(this.stepLength);\n        return this;\n    }\n    /**\n     * Caches an array of equidistant (more or less) points on the curve.\n     */\n    Spline.prototype.cacheSteps = function (mindist) {\n        var steps = [];\n        var laststep = this.pos(0);\n        steps.push(0);\n        for (var t = 0; t < this.duration; t += 10) {\n            var step = this.pos(t);\n            var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) +\n                (step.y - laststep.y) * (step.y - laststep.y) +\n                (step.z - laststep.z) * (step.z - laststep.z));\n            if (dist > mindist) {\n                steps.push(t);\n                laststep = step;\n            }\n        }\n        return steps;\n    };\n    /**\n     * returns angle and speed in the given point in the curve\n     */\n    Spline.prototype.vector = function (t) {\n        var p1 = this.pos(t + 10);\n        var p2 = this.pos(t - 10);\n        return {\n            angle: (180 * Math.atan2(p1.y - p2.y, p1.x - p2.x)) / 3.14,\n            speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) +\n                (p2.y - p1.y) * (p2.y - p1.y) +\n                (p2.z - p1.z) * (p2.z - p1.z)),\n        };\n    };\n    /**\n     * Gets the position of the point, given time.\n     *\n     * WARNING: The speed is not constant. The time it takes between control points is constant.\n     *\n     * For constant speed, use Spline.steps[i];\n     */\n    Spline.prototype.pos = function (time) {\n        var t = time - this.delay;\n        if (t < 0) {\n            t = 0;\n        }\n        if (t > this.duration) {\n            t = this.duration - 1;\n        }\n        // t = t-this.delay;\n        var t2 = t / this.duration;\n        if (t2 >= 1) {\n            return this.points[this.length - 1];\n        }\n        var n = Math.floor((this.points.length - 1) * t2);\n        var t1 = (this.length - 1) * t2 - n;\n        return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n    };\n    return Spline;\n}());\nexport default Spline;\nfunction bezier(t, p1, c1, c2, p2) {\n    var b = B(t);\n    var pos = {\n        x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n        y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n        z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3],\n    };\n    return pos;\n}\nfunction B(t) {\n    var t2 = t * t;\n    var t3 = t2 * t;\n    return [\n        t3,\n        3 * t2 * (1 - t),\n        3 * t * (1 - t) * (1 - t),\n        (1 - t) * (1 - t) * (1 - t),\n    ];\n}\n","import bbox from '@turf/bbox';\nimport bboxPolygon from '@turf/bbox-polygon';\n\n/**\n * Takes any number of features and returns a rectangular {@link Polygon} that encompasses all vertices.\n *\n * @name envelope\n * @param {GeoJSON} geojson input features\n * @returns {Feature<Polygon>} a rectangular Polygon feature that encompasses all vertices\n * @example\n * var features = turf.featureCollection([\n *   turf.point([-75.343, 39.984], {\"name\": \"Location A\"}),\n *   turf.point([-75.833, 39.284], {\"name\": \"Location B\"}),\n *   turf.point([-75.534, 39.123], {\"name\": \"Location C\"})\n * ]);\n *\n * var enveloped = turf.envelope(features);\n *\n * //addToMap\n * var addToMap = [features, enveloped];\n */\nfunction envelope(geojson) {\n  return bboxPolygon(bbox(geojson));\n}\n\nexport default envelope;\n","import { polygon } from \"@turf/helpers\";\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nexport default function bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\n","import { getCoord } from '@turf/invariant';\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function (lon, lat) {\n  this.lon = lon;\n  this.lat = lat;\n  this.x = D2R * lon;\n  this.y = D2R * lat;\n};\n\nCoord.prototype.view = function () {\n  return String(this.lon).slice(0, 4) + \",\" + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function () {\n  var anti_lat = -1 * this.lat;\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\n  return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function () {\n  this.coords = [];\n  this.length = 0;\n};\n\nLineString.prototype.move_to = function (coord) {\n  this.length++;\n  this.coords.push(coord);\n};\n\nvar Arc = function (properties) {\n  this.properties = properties || {};\n  this.geometries = [];\n};\n\nArc.prototype.json = function () {\n  if (this.geometries.length <= 0) {\n    return {\n      geometry: { type: \"LineString\", coordinates: null },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  } else if (this.geometries.length === 1) {\n    return {\n      geometry: { type: \"LineString\", coordinates: this.geometries[0].coords },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  } else {\n    var multiline = [];\n    for (var i = 0; i < this.geometries.length; i++) {\n      multiline.push(this.geometries[i].coords);\n    }\n    return {\n      geometry: { type: \"MultiLineString\", coordinates: multiline },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function () {\n  var wkt_string = \"\";\n  var wkt = \"LINESTRING(\";\n  var collect = function (c) {\n    wkt += c[0] + \" \" + c[1] + \",\";\n  };\n  for (var i = 0; i < this.geometries.length; i++) {\n    if (this.geometries[i].coords.length === 0) {\n      return \"LINESTRING(empty)\";\n    } else {\n      var coords = this.geometries[i].coords;\n      coords.forEach(collect);\n      wkt_string += wkt.substring(0, wkt.length - 1) + \")\";\n    }\n  }\n  return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function (start, end, properties) {\n  if (!start || start.x === undefined || start.y === undefined) {\n    throw new Error(\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\n    );\n  }\n  if (!end || end.x === undefined || end.y === undefined) {\n    throw new Error(\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\n    );\n  }\n  this.start = new Coord(start.x, start.y);\n  this.end = new Coord(end.x, end.y);\n  this.properties = properties || {};\n\n  var w = this.start.x - this.end.x;\n  var h = this.start.y - this.end.y;\n  var z =\n    Math.pow(Math.sin(h / 2.0), 2) +\n    Math.cos(this.start.y) *\n      Math.cos(this.end.y) *\n      Math.pow(Math.sin(w / 2.0), 2);\n  this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n  if (this.g === Math.PI) {\n    throw new Error(\n      \"it appears \" +\n        start.view() +\n        \" and \" +\n        end.view() +\n        \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\"\n    );\n  } else if (isNaN(this.g)) {\n    throw new Error(\n      \"could not calculate great circle between \" + start + \" and \" + end\n    );\n  }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function (f) {\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\n  var x =\n    A * Math.cos(this.start.y) * Math.cos(this.start.x) +\n    B * Math.cos(this.end.y) * Math.cos(this.end.x);\n  var y =\n    A * Math.cos(this.start.y) * Math.sin(this.start.x) +\n    B * Math.cos(this.end.y) * Math.sin(this.end.x);\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n  var lon = R2D * Math.atan2(y, x);\n  return [lon, lat];\n};\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function (npoints, options) {\n  var first_pass = [];\n  if (!npoints || npoints <= 2) {\n    first_pass.push([this.start.lon, this.start.lat]);\n    first_pass.push([this.end.lon, this.end.lat]);\n  } else {\n    var delta = 1.0 / (npoints - 1);\n    for (var i = 0; i < npoints; ++i) {\n      var step = delta * i;\n      var pair = this.interpolate(step);\n      first_pass.push(pair);\n    }\n  }\n  /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n  var bHasBigDiff = false;\n  var dfMaxSmallDiffLong = 0;\n  // from http://www.gdal.org/ogr2ogr.html\n  // -datelineoffset:\n  // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\n  var dfLeftBorderX = 180 - dfDateLineOffset;\n  var dfRightBorderX = -180 + dfDateLineOffset;\n  var dfDiffSpace = 360 - dfDateLineOffset;\n\n  // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n  for (var j = 1; j < first_pass.length; ++j) {\n    var dfPrevX = first_pass[j - 1][0];\n    var dfX = first_pass[j][0];\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\n    if (\n      dfDiffLong > dfDiffSpace &&\n      ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) ||\n        (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))\n    ) {\n      bHasBigDiff = true;\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\n      dfMaxSmallDiffLong = dfDiffLong;\n    }\n  }\n\n  var poMulti = [];\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n    var poNewLS = [];\n    poMulti.push(poNewLS);\n    for (var k = 0; k < first_pass.length; ++k) {\n      var dfX0 = parseFloat(first_pass[k][0]);\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\n        var dfX2 = parseFloat(first_pass[k][0]);\n        var dfY2 = parseFloat(first_pass[k][1]);\n        if (\n          dfX1 > -180 &&\n          dfX1 < dfRightBorderX &&\n          dfX2 === 180 &&\n          k + 1 < first_pass.length &&\n          first_pass[k - 1][0] > -180 &&\n          first_pass[k - 1][0] < dfRightBorderX\n        ) {\n          poNewLS.push([-180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        } else if (\n          dfX1 > dfLeftBorderX &&\n          dfX1 < 180 &&\n          dfX2 === -180 &&\n          k + 1 < first_pass.length &&\n          first_pass[k - 1][0] > dfLeftBorderX &&\n          first_pass[k - 1][0] < 180\n        ) {\n          poNewLS.push([180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        }\n\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n          // swap dfX1, dfX2\n          var tmpX = dfX1;\n          dfX1 = dfX2;\n          dfX2 = tmpX;\n          // swap dfY1, dfY2\n          var tmpY = dfY1;\n          dfY1 = dfY2;\n          dfY2 = tmpY;\n        }\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n          dfX2 += 360;\n        }\n\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n          poNewLS.push([\n            first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180,\n            dfY,\n          ]);\n          poNewLS = [];\n          poNewLS.push([\n            first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180,\n            dfY,\n          ]);\n          poMulti.push(poNewLS);\n        } else {\n          poNewLS = [];\n          poMulti.push(poNewLS);\n        }\n        poNewLS.push([dfX0, first_pass[k][1]]);\n      } else {\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n      }\n    }\n  } else {\n    // add normally\n    var poNewLS0 = [];\n    poMulti.push(poNewLS0);\n    for (var l = 0; l < first_pass.length; ++l) {\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n    }\n  }\n\n  var arc = new Arc(this.properties);\n  for (var m = 0; m < poMulti.length; ++m) {\n    var line = new LineString();\n    arc.geometries.push(line);\n    var points = poMulti[m];\n    for (var j0 = 0; j0 < points.length; ++j0) {\n      line.move_to(points[j0]);\n    }\n  }\n  return arc;\n};\n\n/**\n * Calculate great circles routes as {@link LineString} or {@link MultiLineString}.\n * If the `start` and `end` points span the antimeridian, the resulting feature will\n * be split into a `MultiLineString`.\n *\n * @name greatCircle\n * @param {Coord} start source point feature\n * @param {Coord} end destination point feature\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] line feature properties\n * @param {number} [options.npoints=100] number of points\n * @param {number} [options.offset=10] offset controls the likelyhood that lines will\n * be split which cross the dateline. The higher the number the more likely.\n * @returns {Feature<LineString | MultiLineString>} great circle line feature\n * @example\n * var start = turf.point([-122, 48]);\n * var end = turf.point([-77, 39]);\n *\n * var greatCircle = turf.greatCircle(start, end, {properties: {name: 'Seattle to DC'}});\n *\n * //addToMap\n * var addToMap = [start, end, greatCircle]\n */\nfunction greatCircle(start, end, options) {\n  // Optional parameters\n  options = options || {};\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\n  var properties = options.properties;\n  var npoints = options.npoints;\n  var offset = options.offset;\n\n  start = getCoord(start);\n  end = getCoord(end);\n  properties = properties || {};\n  npoints = npoints || 100;\n  offset = offset || 10;\n\n  var generator = new GreatCircle(\n    { x: start[0], y: start[1] },\n    { x: end[0], y: end[1] },\n    properties\n  );\n\n  var line = generator.Arc(npoints, { offset: offset });\n\n  return line.json();\n}\n\nexport default greatCircle;\n","import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { isObject, multiPolygon, featureCollection, polygon } from '@turf/helpers';\nimport objectAssign from 'object-assign';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n\n  // validation\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n  var matrix = [];\n  // create property matrix from sorted points\n  // looping order matters here\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      // Check if zProperty exist\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);\n      else row.push(0);\n      // add flags\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n\n  return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n\n  // divide points by rows with the same latitude\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n\n  // sort points (with the same latitude) by longitude\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n\n  // sort rows (of points with the same latitude) by latitude\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n    else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n\n  return pointMatrix;\n}\n\n/*!\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n *\n * MarchingSquaresJS is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * MarchingSquaresJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * As additional permission under GNU Affero General Public License version 3\n * section 7, third-party projects (personal or commercial) may distribute,\n * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the\n * requirement that said third-party project for that reason alone becomes\n * subject to any requirement of the GNU Affero General Public License version 3.\n * Any modifications to MarchingSquaresJS, however, must be shared with the public\n * and made available.\n *\n * In summary this:\n * - allows you to use MarchingSquaresJS at no cost\n * - allows you to use MarchingSquaresJS for both personal and commercial purposes\n * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any\n *   license as long as this license notice is included\n * - enables you to keep the source code of your program that uses MarchingSquaresJS\n *   undisclosed\n * - forces you to share any modifications you have made to MarchingSquaresJS,\n *   e.g. bug-fixes\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.\n */\nvar defaultSettings = {\n  successCallback: null,\n  verbose: false,\n  polygons: false,\n};\n\nvar settings = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n  /* process options */\n  options = options ? options : {};\n\n  var optionKeys = Object.keys(defaultSettings);\n\n  for (var i = 0; i < optionKeys.length; i++) {\n    var key = optionKeys[i];\n    var val = options[key];\n    val =\n      typeof val !== \"undefined\" && val !== null ? val : defaultSettings[key];\n\n    settings[key] = val;\n  }\n\n  if (settings.verbose)\n    console.log(\n      \"MarchingSquaresJS-isoBands: computing isobands for [\" +\n        minV +\n        \":\" +\n        (minV + bandwidth) +\n        \"]\"\n    );\n\n  var grid = computeBandGrid(data, minV, bandwidth);\n\n  var ret;\n  if (settings.polygons) {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\"\n      );\n    ret = BandGrid2Areas(grid);\n  } else {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\"\n      );\n    ret = BandGrid2AreaPaths(grid);\n  }\n\n  if (typeof settings.successCallback === \"function\")\n    settings.successCallback(ret);\n\n  return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64,\n  Node1 = 16,\n  Node2 = 4,\n  Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\n\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\n\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\n\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\n\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\n\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\n\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\n\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\n\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\n\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\n\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\n\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\n\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\n\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\n\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\n\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\n\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\n\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\n\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\n\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\n\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\n\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\n\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\n\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\n\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\n\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\n\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\n\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\n\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\n\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\n\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\n\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\n\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\n\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\n\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\n\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\n\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\n\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\n\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\n\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\n\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\n\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\n\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\n\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\n\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\n\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\n\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\n\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\n\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\nvar p01 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n  ];\n};\nvar p02 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, cell.righttop],\n  ];\n};\nvar p03 = function (cell) {\n  return [\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p05 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n  ];\n};\nvar p06 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\nvar p07 = function (cell) {\n  return [\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n  return [\n    [0, 0],\n    [0, cell.leftbottom],\n    [1, cell.rightbottom],\n    [1, 0],\n  ];\n};\nvar p09 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topright, 1],\n    [1, 1],\n  ];\n};\nvar p10 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\nvar p11 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\nvar p12 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p13 = function (cell) {\n  return [\n    [cell.topleft, 1],\n    [cell.topright, 1],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n  ];\n};\n/* square case */\nvar p14 = function () {\n  return [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n  ];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [1, 1],\n  ];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n  ];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [cell.topright, 1],\n  ];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n  ];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n  return [\n    [1, 1],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1] = isoBandEdgeLB[1] = 18;\nisoBandEdgeBL[169] = isoBandEdgeLB[169] = 18;\nisoBandEdgeBR[4] = isoBandEdgeRB[4] = 12;\nisoBandEdgeBR[166] = isoBandEdgeRB[166] = 12;\nisoBandEdgeRT[16] = isoBandEdgeTR[16] = 4;\nisoBandEdgeRT[154] = isoBandEdgeTR[154] = 4;\nisoBandEdgeLT[64] = isoBandEdgeTL[64] = 22;\nisoBandEdgeLT[106] = isoBandEdgeTL[106] = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2] = isoBandEdgeLT[2] = 17;\nisoBandEdgeBL[2] = isoBandEdgeLB[2] = 18;\nisoBandEdgeBR[168] = isoBandEdgeLT[168] = 17;\nisoBandEdgeBL[168] = isoBandEdgeLB[168] = 18;\nisoBandEdgeRT[8] = isoBandEdgeBL[8] = 9;\nisoBandEdgeRB[8] = isoBandEdgeBR[8] = 12;\nisoBandEdgeRT[162] = isoBandEdgeBL[162] = 9;\nisoBandEdgeRB[162] = isoBandEdgeBR[162] = 12;\nisoBandEdgeRT[32] = isoBandEdgeTR[32] = 4;\nisoBandEdgeRB[32] = isoBandEdgeTL[32] = 1;\nisoBandEdgeRT[138] = isoBandEdgeTR[138] = 4;\nisoBandEdgeRB[138] = isoBandEdgeTL[138] = 1;\nisoBandEdgeLB[128] = isoBandEdgeTR[128] = 21;\nisoBandEdgeLT[128] = isoBandEdgeTL[128] = 22;\nisoBandEdgeLB[42] = isoBandEdgeTR[42] = 21;\nisoBandEdgeLT[42] = isoBandEdgeTL[42] = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) {\n  return [p07(c), p05(c)];\n}; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) {\n  return [p06(c), p04(c)];\n}; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) {\n  return [p02(c), p00(c)];\n}; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) {\n  return [p01(c), p03(c)];\n}; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) {\n  return [p02(c), p04(c)];\n}; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) {\n  return [p06(c), p00(c)];\n}; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) {\n  return [p05(c), p03(c)];\n}; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) {\n  return [p01(c), p07(c)];\n}; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n  return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n  var BandGrid = { rows: rows, cols: cols, cells: [] };\n\n  var maxV = minV + Math.abs(bandwidth);\n\n  for (var j = 0; j < rows; ++j) {\n    BandGrid.cells[j] = [];\n    for (var i = 0; i < cols; ++i) {\n      /*  compose the 4-trit corner representation */\n      var cval = 0;\n\n      var tl = data[j + 1][i];\n      var tr = data[j + 1][i + 1];\n      var br = data[j][i + 1];\n      var bl = data[j][i];\n\n      if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n        continue;\n      }\n\n      cval |= tl < minV ? 0 : tl > maxV ? 128 : 64;\n      cval |= tr < minV ? 0 : tr > maxV ? 32 : 16;\n      cval |= br < minV ? 0 : br > maxV ? 8 : 4;\n      cval |= bl < minV ? 0 : bl > maxV ? 2 : 1;\n\n      var cval_real = +cval;\n\n      /* resolve ambiguity via averaging */\n      var flipped = 0;\n      if (\n        cval === 17 /* 0101 */ ||\n        cval === 18 /* 0102 */ ||\n        cval === 33 /* 0201 */ ||\n        cval === 34 /* 0202 */ ||\n        cval === 38 /* 0212 */ ||\n        cval === 68 /* 1010 */ ||\n        cval === 72 /* 1020 */ ||\n        cval === 98 /* 1202 */ ||\n        cval === 102 /* 1212 */ ||\n        cval === 132 /* 2010 */ ||\n        cval === 136 /* 2020 */ ||\n        cval === 137 /* 2021 */ ||\n        cval === 152 /* 2120 */ ||\n        cval === 153 /* 2121 */\n      ) {\n        var average = (tl + tr + br + bl) / 4;\n        /* set flipped state */\n        flipped = average > maxV ? 2 : average < minV ? 0 : 1;\n\n        /* adjust cval for flipped cases */\n\n        /* 8-sided cases */\n        if (cval === 34) {\n          if (flipped === 1) {\n            cval = 35;\n          } else if (flipped === 0) {\n            cval = 136;\n          }\n        } else if (cval === 136) {\n          if (flipped === 1) {\n            cval = 35;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 34;\n          }\n        } else if (cval === 17) {\n          /* 6-sided polygon cases */\n          if (flipped === 1) {\n            cval = 155;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 153;\n          }\n        } else if (cval === 68) {\n          if (flipped === 1) {\n            cval = 103;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 102;\n          }\n        } else if (cval === 153) {\n          if (flipped === 1) cval = 155;\n        } else if (cval === 102) {\n          if (flipped === 1) cval = 103;\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          if (flipped < 2) {\n            cval = 156;\n            flipped = 1;\n          }\n        } else if (cval === 137) {\n          if (flipped < 2) {\n            cval = 139;\n            flipped = 1;\n          }\n        } else if (cval === 98) {\n          if (flipped < 2) {\n            cval = 99;\n            flipped = 1;\n          }\n        } else if (cval === 38) {\n          if (flipped < 2) {\n            cval = 39;\n            flipped = 1;\n          }\n        } else if (cval === 18) {\n          if (flipped > 0) {\n            cval = 156;\n            flipped = 4;\n          } else {\n            cval = 152;\n          }\n        } else if (cval === 33) {\n          if (flipped > 0) {\n            cval = 139;\n            flipped = 4;\n          } else {\n            cval = 137;\n          }\n        } else if (cval === 72) {\n          if (flipped > 0) {\n            cval = 99;\n            flipped = 4;\n          } else {\n            cval = 98;\n          }\n        } else if (cval === 132) {\n          if (flipped > 0) {\n            cval = 39;\n            flipped = 4;\n          } else {\n            cval = 38;\n          }\n        }\n      }\n\n      /* add cell to BandGrid if it contains at least one polygon-side */\n      if (cval != 0 && cval != 170) {\n        var topleft,\n          topright,\n          bottomleft,\n          bottomright,\n          righttop,\n          rightbottom,\n          lefttop,\n          leftbottom;\n\n        topleft = topright = bottomleft = bottomright = righttop = rightbottom = lefttop = leftbottom = 0.5;\n\n        var edges = [];\n\n        /* do interpolation here */\n        /* 1st Triangles */\n        if (cval === 1) {\n          /* 0001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 169) {\n          /* 2221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 4) {\n          /* 0010 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 166) {\n          /* 2212 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 16) {\n          /* 0100 */\n          righttop = interpolateX(minV, br, tr);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 154) {\n          /* 2122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 64) {\n          /* 1000 */\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 106) {\n          /* 1222 */\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 168) {\n          /* 2nd Trapezoids */\n          /* 2220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 2) {\n          /* 0002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 162) {\n          /* 2202 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 8) {\n          /* 0020 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 138) {\n          /* 2022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 32) {\n          /* 0200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 42) {\n          /* 0222 */\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 128) {\n          /* 2000 */\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        }\n\n        /* 3rd rectangle cases */\n        if (cval === 5) {\n          /* 0011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 165) {\n          /* 2211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 20) {\n          /* 0110 */\n          bottomright = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 150) {\n          /* 2112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 80) {\n          /* 1100 */\n          righttop = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 90) {\n          /* 1122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 65) {\n          /* 1001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 105) {\n          /* 1221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 160) {\n          /* 2200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 10) {\n          /* 0022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 130) {\n          /* 2002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 40) {\n          /* 0220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 101) {\n          /* 4th single pentagon cases */\n          /* 1211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 69) {\n          /* 1011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 149) {\n          /* 2111 */\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 21) {\n          /* 0111 */\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 86) {\n          /* 1112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 84) {\n          /* 1110 */\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 89) {\n          /* 1121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 81) {\n          /* 1101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 96) {\n          /* 1200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 74) {\n          /* 1022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 24) {\n          /* 0120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 146) {\n          /* 2102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 6) {\n          /* 0012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 164) {\n          /* 2210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 129) {\n          /* 2001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 41) {\n          /* 0221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 66) {\n          /* 1002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 104) {\n          /* 1220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeTL[cval]);\n        } else if (cval === 144) {\n          /* 2100 */\n          righttop = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 26) {\n          /* 0122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 36) {\n          /* 0210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 134) {\n          /* 2012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 9) {\n          /* 0021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 161) {\n          /* 2201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 37) {\n          /* 5th single hexagon cases */\n          /* 0211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 133) {\n          /* 2011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 148) {\n          /* 2110 */\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 22) {\n          /* 0112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 82) {\n          /* 1102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 88) {\n          /* 1120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 73) {\n          /* 1021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 97) {\n          /* 1201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 145) {\n          /* 2101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 25) {\n          /* 0121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 70) {\n          /* 1012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 100) {\n          /* 1210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 34) {\n          /* 8-sided cases */\n          /* 0202 || 2020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 35) {\n          /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 136) {\n          /* 2020 || 0202 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 153) {\n          /* 6-sided polygon cases */\n          /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 102) {\n          /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 155) {\n          /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 103) {\n          /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 156) {\n          /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 137) {\n          /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 139) {\n          /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 98) {\n          /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 99) {\n          /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 38) {\n          /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 39) {\n          /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 85) {\n          righttop = 1;\n          rightbottom = 0;\n          bottomright = 1;\n          bottomleft = 0;\n          leftbottom = 0;\n          lefttop = 1;\n          topleft = 0;\n          topright = 1;\n        }\n\n        if (\n          topleft < 0 ||\n          topleft > 1 ||\n          topright < 0 ||\n          topright > 1 ||\n          righttop < 0 ||\n          righttop > 1 ||\n          bottomright < 0 ||\n          bottomright > 1 ||\n          leftbottom < 0 ||\n          leftbottom > 1 ||\n          lefttop < 0 ||\n          lefttop > 1\n        ) {\n          console.log(\n            \"MarchingSquaresJS-isoBands: \" +\n              cval +\n              \" \" +\n              cval_real +\n              \" \" +\n              tl +\n              \",\" +\n              tr +\n              \",\" +\n              br +\n              \",\" +\n              bl +\n              \" \" +\n              flipped +\n              \" \" +\n              topleft +\n              \" \" +\n              topright +\n              \" \" +\n              righttop +\n              \" \" +\n              rightbottom +\n              \" \" +\n              bottomright +\n              \" \" +\n              bottomleft +\n              \" \" +\n              leftbottom +\n              \" \" +\n              lefttop\n          );\n        }\n\n        BandGrid.cells[j][i] = {\n          cval: cval,\n          cval_real: cval_real,\n          flipped: flipped,\n          topleft: topleft,\n          topright: topright,\n          righttop: righttop,\n          rightbottom: rightbottom,\n          bottomright: bottomright,\n          bottomleft: bottomleft,\n          leftbottom: leftbottom,\n          lefttop: lefttop,\n          edges: edges,\n        };\n      }\n    }\n  }\n\n  return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n  var areas = [];\n  var rows = grid.rows;\n  var cols = grid.cols;\n  var currentPolygon = [];\n\n  for (var j = 0; j < rows; j++) {\n    for (var i = 0; i < cols; i++) {\n      if (\n        typeof grid.cells[j][i] !== \"undefined\" &&\n        grid.cells[j][i].edges.length > 0\n      ) {\n        /* trace back polygon path starting from this cell */\n\n        var cell = grid.cells[j][i];\n\n        /* get start coordinates */\n\n        var prev = getStartXY(cell),\n          next = null,\n          p = i,\n          q = j;\n\n        if (prev !== null) {\n          currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n          //console.log(cell);\n          //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n        }\n\n        do {\n          //console.log(p + \",\" + q);\n          //console.log(grid.cells[q][p]);\n          //console.log(grid.cells[q][p].edges);\n          //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n          next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n          if (next !== null) {\n            //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n            currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n            p += next.x;\n            q += next.y;\n            prev = next;\n          } else {\n            //console.log(\"getExitXY() returned null!\");\n            break;\n          }\n          //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n          /* special case, where we've reached the grid boundaries */\n          if (\n            q < 0 ||\n            q >= rows ||\n            p < 0 ||\n            p >= cols ||\n            typeof grid.cells[q][p] === \"undefined\"\n          ) {\n            /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n            /* set back coordinates of current cell */\n            p -= next.x;\n            q -= next.y;\n\n            //console.log(\"reached boundary at \" + p + \" \" + q);\n\n            var missing = traceOutOfGridPath(\n              grid,\n              p,\n              q,\n              next.x,\n              next.y,\n              next.o\n            );\n            if (missing !== null) {\n              missing.path.forEach(function (pp) {\n                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                currentPolygon.push(pp);\n              });\n              p = missing.i;\n              q = missing.j;\n              prev = missing;\n            } else {\n              break;\n            }\n            //console.log(grid.cells[q][p]);\n          }\n        } while (\n          typeof grid.cells[q][p] !== \"undefined\" &&\n          grid.cells[q][p].edges.length > 0\n        );\n\n        areas.push(currentPolygon);\n        //console.log(\"next polygon\");\n        //console.log(currentPolygon);\n        currentPolygon = [];\n        if (grid.cells[j][i].edges.length > 0) i--;\n      }\n    }\n  }\n  return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n  var cell = grid.cells[j][i];\n  var cval = cell.cval_real;\n  var p = i + d_x,\n    q = j + d_y;\n  var path = [];\n  var closed = false;\n\n  while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    if (\n      typeof grid.cells[q] === \"undefined\" ||\n      typeof grid.cells[q][p] === \"undefined\"\n    ) {\n      //console.log(\"which is undefined\");\n      /* we can't move on, so we have to change direction to proceed further */\n\n      /* go back to previous cell */\n      q -= d_y;\n      p -= d_x;\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n\n      /* check where we've left defined cells of the grid... */\n      if (d_y === -1) {\n        /* we came from top */\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node3) {\n            /* lower left node is within range, so we move left */\n            path.push([p, q]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node2) {\n            /* lower right node is within range, so we move right */\n            path.push([p + 1, q]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n          } else {\n            /* close the path */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node3) {\n          path.push([p, q]);\n          d_x = -1;\n          d_y = 0;\n          d_o = 0;\n        } else if (cval & Node2) {\n          path.push([p + cell.bottomright, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 1;\n          closed = true;\n          break;\n        } else {\n          path.push([p + cell.bottomleft, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 0;\n          closed = true;\n          break;\n        }\n      } else if (d_y === 1) {\n        /* we came from bottom */\n        //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node1) {\n            /* top right node is within range, so we move right */\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (!(cval & Node0)) {\n            /* found entry within same cell */\n            path.push([p + cell.topright, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          } else {\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node1) {\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n        } else {\n          /* move right */\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n          //console.log(\"wtf\");\n          //break;\n        }\n      } else if (d_x === -1) {\n        /* we came from right */\n        //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          //console.log(\"continue at bottom\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else if (!(cval & Node3)) {\n            /* there has to be an entry into the regular grid again! */\n            //console.log(\"exiting top\");\n            path.push([p, q + cell.lefttop]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            break;\n          } else {\n            //console.log(\"exiting bottom\");\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          //console.log(\"continue at top\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else {\n            /* */\n            console.log(\"MarchingSquaresJS-isoBands: wtf\");\n            break;\n          }\n        }\n      } else if (d_x === 1) {\n        /* we came from left */\n        //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit bottom */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          /* exit top */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (!(cval & Node1)) {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          } else {\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            break;\n          }\n        }\n      } else {\n        /* we came from the same cell */\n        console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");\n        break;\n      }\n    } else {\n      /* try to find an entry into the regular grid again! */\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n      //console.log(\"which is defined\");\n\n      if (d_x === -1) {\n        if (d_o === 0) {\n          /* try to go downwards */\n          if (\n            typeof grid.cells[q - 1] !== \"undefined\" &&\n            typeof grid.cells[q - 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (cval & Node3) {\n            /* proceed searching in x-direction */\n            //console.log(\"proceeding in x-direction!\");\n            path.push([p, q]);\n          } else {\n            /* we must have found an entry into the regular grid */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else if (cval & Node0) {\n          /* proceed searchin in x-direction */\n          console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\");\n        } else {\n          /* we must have found an entry into the regular grid */\n          console.log(\n            \"MarchingSquaresJS-isoBands: found entry from top at \" + p + \",\" + q\n          );\n          break;\n        }\n      } else if (d_x === 1) {\n        if (d_o === 0) {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        } else {\n          /* try to go upwards */\n          if (\n            typeof grid.cells[q + 1] !== \"undefined\" &&\n            typeof grid.cells[q + 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else if (cval & Node1) {\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        }\n      } else if (d_y === -1) {\n        if (d_o === 1) {\n          /* try to go right */\n          if (typeof grid.cells[q][p + 1] !== \"undefined\") {\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            /* found entry into regular grid! */\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from top at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else if (d_y === 1) {\n        if (d_o === 0) {\n          //console.log(\"we came from bottom left and proceed to the left\");\n          /* try to go left */\n          if (typeof grid.cells[q][p - 1] !== \"undefined\") {\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          //console.log(\"we came from bottom right and proceed to the right\");\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else {\n        console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");\n        break;\n      }\n    }\n\n    p += d_x;\n    q += d_y;\n    //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n    if (p === i && q === j) {\n      /* bail out, once we've closed a circle path */\n      break;\n    }\n  }\n\n  //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  return { path: path, i: p, j: q, x: d_x, y: d_y, o: d_o };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n  delete cell.edges[edgeIdx];\n  for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n    cell.edges[k - 1] = cell.edges[k];\n  }\n  cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n  if (cell.edges.length > 0) {\n    var e = cell.edges[cell.edges.length - 1];\n    //console.log(\"starting with edge \" + e);\n    var cval = cell.cval_real;\n    switch (e) {\n      case 0:\n        if (cval & Node1) {\n          /* node 1 within range */\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          /* node 1 below or above threshold */\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 1:\n        if (cval & Node2) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 2:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 3:\n        if (cval & Node3) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 4:\n        if (cval & Node1) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 5:\n        if (cval & Node2) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 6:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 7:\n        if (cval & Node3) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 8:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 9:\n        if (cval & Node3) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 10:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 11:\n        if (cval & Node0) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 12:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 13:\n        if (cval & Node3) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 14:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 15:\n        if (cval & Node0) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 16:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 17:\n        if (cval & Node0) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 18:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 19:\n        if (cval & Node0) {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 20:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 21:\n        if (cval & Node1) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 22:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 23:\n        if (cval & Node1) {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      default:\n        console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n        console.log(cell);\n        break;\n    }\n  }\n\n  return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n  var e,\n    id_x,\n    d_x,\n    d_y,\n    cval = cell.cval;\n  var d_o;\n\n  switch (x) {\n    case -1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeRB[cval];\n          d_x = isoBandNextXRB[cval];\n          d_y = isoBandNextYRB[cval];\n          d_o = isoBandNextORB[cval];\n          break;\n        default:\n          e = isoBandEdgeRT[cval];\n          d_x = isoBandNextXRT[cval];\n          d_y = isoBandNextYRT[cval];\n          d_o = isoBandNextORT[cval];\n          break;\n      }\n      break;\n    case 1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeLB[cval];\n          d_x = isoBandNextXLB[cval];\n          d_y = isoBandNextYLB[cval];\n          d_o = isoBandNextOLB[cval];\n          break;\n        default:\n          e = isoBandEdgeLT[cval];\n          d_x = isoBandNextXLT[cval];\n          d_y = isoBandNextYLT[cval];\n          d_o = isoBandNextOLT[cval];\n          break;\n      }\n      break;\n    default:\n      switch (y) {\n        case -1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeTL[cval];\n              d_x = isoBandNextXTL[cval];\n              d_y = isoBandNextYTL[cval];\n              d_o = isoBandNextOTL[cval];\n              break;\n            default:\n              e = isoBandEdgeTR[cval];\n              d_x = isoBandNextXTR[cval];\n              d_y = isoBandNextYTR[cval];\n              d_o = isoBandNextOTR[cval];\n              break;\n          }\n          break;\n        case 1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeBL[cval];\n              d_x = isoBandNextXBL[cval];\n              d_y = isoBandNextYBL[cval];\n              d_o = isoBandNextOBL[cval];\n              break;\n            default:\n              e = isoBandEdgeBR[cval];\n              d_x = isoBandNextXBR[cval];\n              d_y = isoBandNextYBR[cval];\n              d_o = isoBandNextOBR[cval];\n              break;\n          }\n          break;\n      }\n      break;\n  }\n\n  id_x = cell.edges.indexOf(e);\n  if (typeof cell.edges[id_x] !== \"undefined\") {\n    deleteEdge(cell, id_x);\n  } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n    return null;\n  }\n\n  cval = cell.cval_real;\n\n  switch (e) {\n    case 0:\n      if (cval & Node1) {\n        /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n      } else {\n        /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 1:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 2:\n      if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 3:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 4:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 5:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 6:\n      if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 7:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 8:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 9:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 10:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 11:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 12:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 13:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 14:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 15:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 16:\n      if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 17:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 18:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 19:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomleft;\n        y = 0;\n      }\n      break;\n    case 20:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 21:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 22:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 23:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.lefttop;\n      }\n      break;\n    default:\n      console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n      console.log(cell);\n      return null;\n  }\n\n  if (\n    typeof x === \"undefined\" ||\n    typeof y === \"undefined\" ||\n    typeof d_x === \"undefined\" ||\n    typeof d_y === \"undefined\" ||\n    typeof d_o === \"undefined\"\n  ) {\n    console.log(\"MarchingSquaresJS-isoBands: undefined value!\");\n    console.log(cell);\n    console.log(x + \" \" + y + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  }\n  return { p: [x, y], x: d_x, y: d_y, o: d_o };\n}\n\nfunction BandGrid2Areas(grid) {\n  var areas = [];\n  var area_idx = 0;\n\n  grid.cells.forEach(function (g, j) {\n    g.forEach(function (gg, i) {\n      if (typeof gg !== \"undefined\") {\n        var a = polygon_table[gg.cval](gg);\n        if (typeof a === \"object\" && isArray(a)) {\n          if (typeof a[0] === \"object\" && isArray(a[0])) {\n            if (typeof a[0][0] === \"object\" && isArray(a[0][0])) {\n              a.forEach(function (aa) {\n                aa.forEach(function (aaa) {\n                  aaa[0] += i;\n                  aaa[1] += j;\n                });\n                areas[area_idx++] = aa;\n              });\n            } else {\n              a.forEach(function (aa) {\n                aa[0] += i;\n                aa[1] += j;\n              });\n              areas[area_idx++] = a;\n            }\n          } else {\n            console.log(\n              \"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\"\n            );\n          }\n        } else {\n          console.log(\n            \"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\"\n          );\n        }\n      }\n    });\n  });\n\n  return areas;\n}\n\n/**\n * Takes a square or rectangular grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points - must be square or rectangular\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var commonProperties = options.commonProperties || {};\n  var breaksProperties = options.breaksProperties || [];\n\n  // Validation\n  collectionOf(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject(commonProperties))\n    throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties))\n    throw new Error(\"breaksProperties is not an Array\");\n\n  // Isoband methods\n  var matrix = gridToMatrix(pointGrid, { zProperty: zProperty, flip: true });\n  var contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n\n  var multipolygons = contours.map(function (contour, index) {\n    if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    }\n    // collect all properties\n    var contourProperties = objectAssign(\n      {},\n      commonProperties,\n      breaksProperties[index]\n    );\n    contourProperties[zProperty] = contour[zProperty];\n    var multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n\n  return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n  var contours = [];\n  for (var i = 1; i < breaks.length; i++) {\n    var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n    var upperBand = +breaks[i];\n\n    var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n    // as per GeoJson rules for creating a Polygon, make sure the first element\n    // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n    // and any subsequent elements represent interior rings (i.e. smaller area);\n    // this avoids rendering issues of the MultiPolygons on the map\n    var nestedRings = orderByArea(isobandsCoords);\n    var groupedRings = groupNestedRings(nestedRings);\n    var obj = {};\n    obj[\"groupedRings\"] = groupedRings;\n    obj[property] = lowerBand + \"-\" + upperBand;\n    contours.push(obj);\n  }\n  return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points) {\n  // get dimensions (on the map) of the original grid\n  var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n  var originalWidth = gridBbox[2] - gridBbox[0];\n  var originalHeigth = gridBbox[3] - gridBbox[1];\n\n  // get origin, which is the first point of the last row on the rectangular data on the map\n  var x0 = gridBbox[0];\n  var y0 = gridBbox[1];\n  // get number of cells per side\n  var matrixWidth = matrix[0].length - 1;\n  var matrixHeight = matrix.length - 1;\n  // calculate the scaling factor between matrix and rectangular grid on the map\n  var scaleX = originalWidth / matrixWidth;\n  var scaleY = originalHeigth / matrixHeight;\n\n  var resize = function (point) {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  };\n\n  // resize and shift each point/line of the isobands\n  contours.forEach(function (contour) {\n    contour.groupedRings.forEach(function (lineRingSet) {\n      lineRingSet.forEach(function (lineRing) {\n        lineRing.forEach(resize);\n      });\n    });\n  });\n  return contours;\n}\n\n/*  utility functions */\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n  var ringsWithArea = [];\n  var areas = [];\n  ringsCoords.forEach(function (coords) {\n    // var poly = polygon([points]);\n    var ringArea = area(polygon([coords]));\n    // create an array of areas value\n    areas.push(ringArea);\n    // associate each lineRing with its area\n    ringsWithArea.push({ ring: coords, area: ringArea });\n  });\n  areas.sort(function (a, b) {\n    // bigger --> smaller\n    return b - a;\n  });\n  // create a new array of linearRings coordinates ordered by their area\n  var orderedByArea = [];\n  areas.forEach(function (area) {\n    for (var lr = 0; lr < ringsWithArea.length; lr++) {\n      if (ringsWithArea[lr].area === area) {\n        orderedByArea.push(ringsWithArea[lr].ring);\n        ringsWithArea.splice(lr, 1);\n        break;\n      }\n    }\n  });\n  return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n  // create a list of the (coordinates of) LinearRings\n  var lrList = orderedLinearRings.map(function (lr) {\n    return { lrCoordinates: lr, grouped: false };\n  });\n  var groupedLinearRingsCoords = [];\n  while (!allGrouped(lrList)) {\n    for (var i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        // create new group starting with the larger not already grouped ring\n        var group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n        // group all the rings contained by the outermost ring\n        for (var j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            var lrPoly = polygon([lrList[j].lrCoordinates]);\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        }\n        // insert the new group\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n  return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n  var points = explode(testPolygon);\n  for (var i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isobands;\n","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { point } from \"@turf/helpers\";\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\nfunction mathSign(x) {\n    return ((x > 0) - (x < 0) || +x);\n}\n/**\n * Returns the direction of the point q relative to the vector p1 -> p2.\n *\n * Implementation of geos::algorithm::CGAlgorithm::orientationIndex()\n * (same as geos::algorithm::CGAlgorithm::computeOrientation())\n *\n * @param {number[]} p1 - the origin point of the vector\n * @param {number[]} p2 - the final point of the vector\n * @param {number[]} q - the point to compute the direction to\n *\n * @returns {number} - 1 if q is ccw (left) from p1->p2,\n *    -1 if q is cw (right) from p1->p2,\n *     0 if q is colinear with p1->p2\n */\nexport function orientationIndex(p1, p2, q) {\n    var dx1 = p2[0] - p1[0], dy1 = p2[1] - p1[1], dx2 = q[0] - p2[0], dy2 = q[1] - p2[1];\n    return mathSign(dx1 * dy2 - dx2 * dy1);\n}\n/**\n * Checks if two envelopes are equal.\n *\n * The function assumes that the arguments are envelopes, i.e.: Rectangular polygon\n *\n * @param {Feature<Polygon>} env1 - Envelope\n * @param {Feature<Polygon>} env2 - Envelope\n * @returns {boolean} - True if the envelopes are equal\n */\nexport function envelopeIsEqual(env1, env2) {\n    var envX1 = env1.geometry.coordinates[0].map(function (c) { return c[0]; }), envY1 = env1.geometry.coordinates[0].map(function (c) { return c[1]; }), envX2 = env2.geometry.coordinates[0].map(function (c) { return c[0]; }), envY2 = env2.geometry.coordinates[0].map(function (c) { return c[1]; });\n    return (Math.max.apply(null, envX1) === Math.max.apply(null, envX2) &&\n        Math.max.apply(null, envY1) === Math.max.apply(null, envY2) &&\n        Math.min.apply(null, envX1) === Math.min.apply(null, envX2) &&\n        Math.min.apply(null, envY1) === Math.min.apply(null, envY2));\n}\n/**\n * Check if a envelope is contained in other one.\n *\n * The function assumes that the arguments are envelopes, i.e.: Convex polygon\n * XXX: Envelopes are rectangular, checking if a point is inside a rectangule is something easy,\n * this could be further improved.\n *\n * @param {Feature<Polygon>} self - Envelope\n * @param {Feature<Polygon>} env - Envelope\n * @returns {boolean} - True if env is contained in self\n */\nexport function envelopeContains(self, env) {\n    return env.geometry.coordinates[0].every(function (c) {\n        return booleanPointInPolygon(point(c), self);\n    });\n}\n/**\n * Checks if two coordinates are equal.\n *\n * @param {number[]} coord1 - First coordinate\n * @param {number[]} coord2 - Second coordinate\n * @returns {boolean} - True if coordinates are equal\n */\nexport function coordinatesEqual(coord1, coord2) {\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n}\n","import { orientationIndex } from \"./util.js\";\n/**\n * Node\n */\nvar Node = /** @class */ (function () {\n    function Node(coordinates) {\n        this.id = Node.buildId(coordinates);\n        this.coordinates = coordinates; //< {Number[]}\n        this.innerEdges = []; //< {Edge[]}\n        // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n        this.outerEdges = []; //< {Edge[]}\n        this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n    }\n    Node.buildId = function (coordinates) {\n        return coordinates.join(\",\");\n    };\n    Node.prototype.removeInnerEdge = function (edge) {\n        this.innerEdges = this.innerEdges.filter(function (e) { return e.from.id !== edge.from.id; });\n    };\n    Node.prototype.removeOuterEdge = function (edge) {\n        this.outerEdges = this.outerEdges.filter(function (e) { return e.to.id !== edge.to.id; });\n    };\n    /**\n     * Outer edges are stored CCW order.\n     *\n     * @memberof Node\n     * @param {Edge} edge - Edge to add as an outerEdge.\n     */\n    Node.prototype.addOuterEdge = function (edge) {\n        this.outerEdges.push(edge);\n        this.outerEdgesSorted = false;\n    };\n    /**\n     * Sorts outer edges in CCW way.\n     *\n     * @memberof Node\n     * @private\n     */\n    Node.prototype.sortOuterEdges = function () {\n        var _this = this;\n        if (!this.outerEdgesSorted) {\n            //this.outerEdges.sort((a, b) => a.compareTo(b));\n            // Using this comparator in order to be deterministic\n            this.outerEdges.sort(function (a, b) {\n                var aNode = a.to, bNode = b.to;\n                if (aNode.coordinates[0] - _this.coordinates[0] >= 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] < 0)\n                    return 1;\n                if (aNode.coordinates[0] - _this.coordinates[0] < 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] >= 0)\n                    return -1;\n                if (aNode.coordinates[0] - _this.coordinates[0] === 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] === 0) {\n                    if (aNode.coordinates[1] - _this.coordinates[1] >= 0 ||\n                        bNode.coordinates[1] - _this.coordinates[1] >= 0)\n                        return aNode.coordinates[1] - bNode.coordinates[1];\n                    return bNode.coordinates[1] - aNode.coordinates[1];\n                }\n                var det = orientationIndex(_this.coordinates, aNode.coordinates, bNode.coordinates);\n                if (det < 0)\n                    return 1;\n                if (det > 0)\n                    return -1;\n                var d1 = Math.pow(aNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(aNode.coordinates[1] - _this.coordinates[1], 2), d2 = Math.pow(bNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(bNode.coordinates[1] - _this.coordinates[1], 2);\n                return d1 - d2;\n            });\n            this.outerEdgesSorted = true;\n        }\n    };\n    /**\n     * Retrieves outer edges.\n     *\n     * They are sorted if they aren't in the CCW order.\n     *\n     * @memberof Node\n     * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n     */\n    Node.prototype.getOuterEdges = function () {\n        this.sortOuterEdges();\n        return this.outerEdges;\n    };\n    Node.prototype.getOuterEdge = function (i) {\n        this.sortOuterEdges();\n        return this.outerEdges[i];\n    };\n    Node.prototype.addInnerEdge = function (edge) {\n        this.innerEdges.push(edge);\n    };\n    return Node;\n}());\nexport default Node;\n","import { lineString } from \"@turf/helpers\";\nimport { orientationIndex } from \"./util.js\";\n/**\n * This class is inspired by GEOS's geos::operation::polygonize::PolygonizeDirectedEdge\n */\nvar Edge = /** @class */ (function () {\n    /**\n     * @param {Node} from - start node of the Edge\n     * @param {Node} to - end node of the edge\n     */\n    function Edge(from, to) {\n        this.from = from; //< start\n        this.to = to; //< End\n        this.next = undefined; //< The edge to be computed after\n        this.label = undefined; //< Used in order to detect Cut Edges (Bridges)\n        this.symetric = undefined; //< The symetric edge of this\n        this.ring = undefined; //< EdgeRing in which the Edge is\n        this.from.addOuterEdge(this);\n        this.to.addInnerEdge(this);\n    }\n    /**\n     * Creates or get the symetric Edge.\n     *\n     * @returns {Edge} - Symetric Edge.\n     */\n    Edge.prototype.getSymetric = function () {\n        if (!this.symetric) {\n            this.symetric = new Edge(this.to, this.from);\n            this.symetric.symetric = this;\n        }\n        return this.symetric;\n    };\n    /**\n     * Removes edge from from and to nodes.\n     */\n    Edge.prototype.deleteEdge = function () {\n        this.from.removeOuterEdge(this);\n        this.to.removeInnerEdge(this);\n    };\n    /**\n     * Compares Edge equallity.\n     *\n     * An edge is equal to another, if the from and to nodes are the same.\n     *\n     * @param {Edge} edge - Another Edge\n     * @returns {boolean} - True if Edges are equal, False otherwise\n     */\n    Edge.prototype.isEqual = function (edge) {\n        return this.from.id === edge.from.id && this.to.id === edge.to.id;\n    };\n    Edge.prototype.toString = function () {\n        return \"Edge { \" + this.from.id + \" -> \" + this.to.id + \" }\";\n    };\n    /**\n     * Returns a LineString representation of the Edge\n     *\n     * @returns {Feature<LineString>} - LineString representation of the Edge\n     */\n    Edge.prototype.toLineString = function () {\n        return lineString([this.from.coordinates, this.to.coordinates]);\n    };\n    /**\n     * Comparator of two edges.\n     *\n     * Implementation of geos::planargraph::DirectedEdge::compareTo.\n     *\n     * @param {Edge} edge - Another edge to compare with this one\n     * @returns {number} -1 if this Edge has a greater angle with the positive x-axis than b,\n     *          0 if the Edges are colinear,\n     *          1 otherwise\n     */\n    Edge.prototype.compareTo = function (edge) {\n        return orientationIndex(edge.from.coordinates, edge.to.coordinates, this.to.coordinates);\n    };\n    return Edge;\n}());\nexport default Edge;\n","import { orientationIndex, envelopeIsEqual, envelopeContains, coordinatesEqual, } from \"./util.js\";\nimport { multiPoint, polygon, point, } from \"@turf/helpers\";\nimport envelope from \"@turf/envelope\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\n/**\n * Ring of edges which form a polygon.\n *\n * The ring may be either an outer shell or a hole.\n *\n * This class is inspired in GEOS's geos::operation::polygonize::EdgeRing\n */\nvar EdgeRing = /** @class */ (function () {\n    function EdgeRing() {\n        this.edges = [];\n        this.polygon = undefined; //< Caches Polygon representation\n        this.envelope = undefined; //< Caches Envelope representation\n    }\n    /**\n     * Add an edge to the ring, inserting it in the last position.\n     *\n     * @memberof EdgeRing\n     * @param {Edge} edge - Edge to be inserted\n     */\n    EdgeRing.prototype.push = function (edge) {\n        this.edges.push(edge);\n        this.polygon = this.envelope = undefined;\n    };\n    /**\n     * Get Edge.\n     *\n     * @memberof EdgeRing\n     * @param {number} i - Index\n     * @returns {Edge} - Edge in the i position\n     */\n    EdgeRing.prototype.get = function (i) {\n        return this.edges[i];\n    };\n    Object.defineProperty(EdgeRing.prototype, \"length\", {\n        /**\n         * Getter of length property.\n         *\n         * @memberof EdgeRing\n         * @returns {number} - Length of the edge ring.\n         */\n        get: function () {\n            return this.edges.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Similar to Array.prototype.forEach for the list of Edges in the EdgeRing.\n     *\n     * @memberof EdgeRing\n     * @param {Function} f - The same function to be passed to Array.prototype.forEach\n     */\n    EdgeRing.prototype.forEach = function (f) {\n        this.edges.forEach(f);\n    };\n    /**\n     * Similar to Array.prototype.map for the list of Edges in the EdgeRing.\n     *\n     * @memberof EdgeRing\n     * @param {Function} f - The same function to be passed to Array.prototype.map\n     * @returns {Array} - The mapped values in the function\n     */\n    EdgeRing.prototype.map = function (f) {\n        return this.edges.map(f);\n    };\n    /**\n     * Similar to Array.prototype.some for the list of Edges in the EdgeRing.\n     *\n     * @memberof EdgeRing\n     * @param {Function} f - The same function to be passed to Array.prototype.some\n     * @returns {boolean} - True if an Edge check the condition\n     */\n    EdgeRing.prototype.some = function (f) {\n        return this.edges.some(f);\n    };\n    /**\n     * Check if the ring is valid in geomtry terms.\n     *\n     * A ring must have either 0 or 4 or more points. The first and the last must be\n     * equal (in 2D)\n     * geos::geom::LinearRing::validateConstruction\n     *\n     * @memberof EdgeRing\n     * @returns {boolean} - Validity of the EdgeRing\n     */\n    EdgeRing.prototype.isValid = function () {\n        // TODO: stub\n        return true;\n    };\n    /**\n     * Tests whether this ring is a hole.\n     *\n     * A ring is a hole if it is oriented counter-clockwise.\n     * Similar implementation of geos::algorithm::CGAlgorithms::isCCW\n     *\n     * @memberof EdgeRing\n     * @returns {boolean} - true: if it is a hole\n     */\n    EdgeRing.prototype.isHole = function () {\n        var _this = this;\n        // XXX: Assuming Ring is valid\n        // Find highest point\n        var hiIndex = this.edges.reduce(function (high, edge, i) {\n            if (edge.from.coordinates[1] > _this.edges[high].from.coordinates[1])\n                high = i;\n            return high;\n        }, 0), iPrev = (hiIndex === 0 ? this.length : hiIndex) - 1, iNext = (hiIndex + 1) % this.length, disc = orientationIndex(this.edges[iPrev].from.coordinates, this.edges[hiIndex].from.coordinates, this.edges[iNext].from.coordinates);\n        if (disc === 0)\n            return (this.edges[iPrev].from.coordinates[0] >\n                this.edges[iNext].from.coordinates[0]);\n        return disc > 0;\n    };\n    /**\n     * Creates a MultiPoint representing the EdgeRing (discarts edges directions).\n     *\n     * @memberof EdgeRing\n     * @returns {Feature<MultiPoint>} - Multipoint representation of the EdgeRing\n     */\n    EdgeRing.prototype.toMultiPoint = function () {\n        return multiPoint(this.edges.map(function (edge) { return edge.from.coordinates; }));\n    };\n    /**\n     * Creates a Polygon representing the EdgeRing.\n     *\n     * @memberof EdgeRing\n     * @returns {Feature<Polygon>} - Polygon representation of the Edge Ring\n     */\n    EdgeRing.prototype.toPolygon = function () {\n        if (this.polygon)\n            return this.polygon;\n        var coordinates = this.edges.map(function (edge) { return edge.from.coordinates; });\n        coordinates.push(this.edges[0].from.coordinates);\n        return (this.polygon = polygon([coordinates]));\n    };\n    /**\n     * Calculates the envelope of the EdgeRing.\n     *\n     * @memberof EdgeRing\n     * @returns {Feature<Polygon>} - envelope\n     */\n    EdgeRing.prototype.getEnvelope = function () {\n        if (this.envelope)\n            return this.envelope;\n        return (this.envelope = envelope(this.toPolygon()));\n    };\n    /**\n     * `geos::operation::polygonize::EdgeRing::findEdgeRingContaining`\n     *\n     * @param {EdgeRing} testEdgeRing - EdgeRing to look in the list\n     * @param {EdgeRing[]} shellList - List of EdgeRing in which to search\n     *\n     * @returns {EdgeRing} - EdgeRing which contains the testEdgeRing\n     */\n    EdgeRing.findEdgeRingContaining = function (testEdgeRing, shellList) {\n        var testEnvelope = testEdgeRing.getEnvelope();\n        var minEnvelope, minShell;\n        shellList.forEach(function (shell) {\n            var tryEnvelope = shell.getEnvelope();\n            if (minShell)\n                minEnvelope = minShell.getEnvelope();\n            // the hole envelope cannot equal the shell envelope\n            if (envelopeIsEqual(tryEnvelope, testEnvelope))\n                return;\n            if (envelopeContains(tryEnvelope, testEnvelope)) {\n                var testEdgeRingCoordinates = testEdgeRing.map(function (edge) { return edge.from.coordinates; });\n                var testPoint = void 0;\n                var _loop_1 = function (pt) {\n                    if (!shell.some(function (edge) { return coordinatesEqual(pt, edge.from.coordinates); })) {\n                        testPoint = pt;\n                    }\n                };\n                for (var _i = 0, testEdgeRingCoordinates_1 = testEdgeRingCoordinates; _i < testEdgeRingCoordinates_1.length; _i++) {\n                    var pt = testEdgeRingCoordinates_1[_i];\n                    _loop_1(pt);\n                }\n                if (testPoint && shell.inside(point(testPoint))) {\n                    if (!minShell || envelopeContains(minEnvelope, tryEnvelope))\n                        minShell = shell;\n                }\n            }\n        });\n        return minShell;\n    };\n    /**\n     * Checks if the point is inside the edgeRing\n     *\n     * @param {Feature<Point>} pt - Point to check if it is inside the edgeRing\n     * @returns {boolean} - True if it is inside, False otherwise\n     */\n    EdgeRing.prototype.inside = function (pt) {\n        return booleanPointInPolygon(pt, this.toPolygon());\n    };\n    return EdgeRing;\n}());\nexport default EdgeRing;\n","import Node from \"./Node.js\";\nimport Edge from \"./Edge.js\";\nimport EdgeRing from \"./EdgeRing.js\";\nimport { flattenEach, coordReduce } from \"@turf/meta\";\nimport { featureOf } from \"@turf/invariant\";\n/**\n * Validates the geoJson.\n *\n * @param {GeoJSON} geoJson - input geoJson.\n * @throws {Error} if geoJson is invalid.\n */\nfunction validateGeoJson(geoJson) {\n    if (!geoJson)\n        throw new Error(\"No geojson passed\");\n    if (geoJson.type !== \"FeatureCollection\" &&\n        geoJson.type !== \"GeometryCollection\" &&\n        geoJson.type !== \"MultiLineString\" &&\n        geoJson.type !== \"LineString\" &&\n        geoJson.type !== \"Feature\")\n        throw new Error(\"Invalid input type '\" + geoJson.type + \"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature\");\n}\n/**\n * Represents a planar graph of edges and nodes that can be used to compute a polygonization.\n *\n * Although, this class is inspired by GEOS's `geos::operation::polygonize::PolygonizeGraph`,\n * it isn't a rewrite. As regards algorithm, this class implements the same logic, but it\n * isn't a javascript transcription of the C++ source.\n *\n * This graph is directed (both directions are created)\n */\nvar Graph = /** @class */ (function () {\n    function Graph() {\n        this.edges = []; //< {Edge[]} dirEdges\n        // The key is the `id` of the Node (ie: coordinates.join(','))\n        this.nodes = {};\n    }\n    /**\n     * Creates a graph from a GeoJSON.\n     *\n     * @param {FeatureCollection<LineString>} geoJson - it must comply with the restrictions detailed in the index\n     * @returns {Graph} - The newly created graph\n     * @throws {Error} if geoJson is invalid.\n     */\n    Graph.fromGeoJson = function (geoJson) {\n        validateGeoJson(geoJson);\n        var graph = new Graph();\n        flattenEach(geoJson, function (feature) {\n            featureOf(feature, \"LineString\", \"Graph::fromGeoJson\");\n            // When a LineString if formed by many segments, split them\n            coordReduce(feature, function (prev, cur) {\n                if (prev) {\n                    var start = graph.getNode(prev), end = graph.getNode(cur);\n                    graph.addEdge(start, end);\n                }\n                return cur;\n            });\n        });\n        return graph;\n    };\n    /**\n     * Creates or get a Node.\n     *\n     * @param {number[]} coordinates - Coordinates of the node\n     * @returns {Node} - The created or stored node\n     */\n    Graph.prototype.getNode = function (coordinates) {\n        var id = Node.buildId(coordinates);\n        var node = this.nodes[id];\n        if (!node)\n            node = this.nodes[id] = new Node(coordinates);\n        return node;\n    };\n    /**\n     * Adds an Edge and its symetricall.\n     *\n     * Edges are added symetrically, i.e.: we also add its symetric\n     *\n     * @param {Node} from - Node which starts the Edge\n     * @param {Node} to - Node which ends the Edge\n     */\n    Graph.prototype.addEdge = function (from, to) {\n        var edge = new Edge(from, to), symetricEdge = edge.getSymetric();\n        this.edges.push(edge);\n        this.edges.push(symetricEdge);\n    };\n    /**\n     * Removes Dangle Nodes (nodes with grade 1).\n     */\n    Graph.prototype.deleteDangles = function () {\n        var _this = this;\n        Object.keys(this.nodes)\n            .map(function (id) { return _this.nodes[id]; })\n            .forEach(function (node) { return _this._removeIfDangle(node); });\n    };\n    /**\n     * Check if node is dangle, if so, remove it.\n     *\n     * It calls itself recursively, removing a dangling node might cause another dangling node\n     *\n     * @param {Node} node - Node to check if it's a dangle\n     */\n    Graph.prototype._removeIfDangle = function (node) {\n        var _this = this;\n        // As edges are directed and symetrical, we count only innerEdges\n        if (node.innerEdges.length <= 1) {\n            var outerNodes = node.getOuterEdges().map(function (e) { return e.to; });\n            this.removeNode(node);\n            outerNodes.forEach(function (n) { return _this._removeIfDangle(n); });\n        }\n    };\n    /**\n     * Delete cut-edges (bridge edges).\n     *\n     * The graph will be traversed, all the edges will be labeled according the ring\n     * in which they are. (The label is a number incremented by 1). Edges with the same\n     * label are cut-edges.\n     */\n    Graph.prototype.deleteCutEdges = function () {\n        var _this = this;\n        this._computeNextCWEdges();\n        this._findLabeledEdgeRings();\n        // Cut-edges (bridges) are edges where both edges have the same label\n        this.edges.forEach(function (edge) {\n            if (edge.label === edge.symetric.label) {\n                _this.removeEdge(edge.symetric);\n                _this.removeEdge(edge);\n            }\n        });\n    };\n    /**\n     * Set the `next` property of each Edge.\n     *\n     * The graph will be transversed in a CW form, so, we set the next of the symetrical edge as the previous one.\n     * OuterEdges are sorted CCW.\n     *\n     * @param {Node} [node] - If no node is passed, the function calls itself for every node in the Graph\n     */\n    Graph.prototype._computeNextCWEdges = function (node) {\n        var _this = this;\n        if (typeof node === \"undefined\") {\n            Object.keys(this.nodes).forEach(function (id) {\n                return _this._computeNextCWEdges(_this.nodes[id]);\n            });\n        }\n        else {\n            node.getOuterEdges().forEach(function (edge, i) {\n                node.getOuterEdge((i === 0 ? node.getOuterEdges().length : i) - 1).symetric.next = edge;\n            });\n        }\n    };\n    /**\n     * Computes the next edge pointers going CCW around the given node, for the given edgering label.\n     *\n     * This algorithm has the effect of converting maximal edgerings into minimal edgerings\n     *\n     * XXX: method literally transcribed from `geos::operation::polygonize::PolygonizeGraph::computeNextCCWEdges`,\n     * could be written in a more javascript way.\n     *\n     * @param {Node} node - Node\n     * @param {number} label - Ring's label\n     */\n    Graph.prototype._computeNextCCWEdges = function (node, label) {\n        var edges = node.getOuterEdges();\n        var firstOutDE, prevInDE;\n        for (var i = edges.length - 1; i >= 0; --i) {\n            var de = edges[i], sym = de.symetric, outDE = void 0, inDE = void 0;\n            if (de.label === label)\n                outDE = de;\n            if (sym.label === label)\n                inDE = sym;\n            if (!outDE || !inDE)\n                // This edge is not in edgering\n                continue;\n            if (inDE)\n                prevInDE = inDE;\n            if (outDE) {\n                if (prevInDE) {\n                    prevInDE.next = outDE;\n                    prevInDE = undefined;\n                }\n                if (!firstOutDE)\n                    firstOutDE = outDE;\n            }\n        }\n        if (prevInDE)\n            prevInDE.next = firstOutDE;\n    };\n    /**\n     * Finds rings and labels edges according to which rings are.\n     *\n     * The label is a number which is increased for each ring.\n     *\n     * @returns {Edge[]} edges that start rings\n     */\n    Graph.prototype._findLabeledEdgeRings = function () {\n        var edgeRingStarts = [];\n        var label = 0;\n        this.edges.forEach(function (edge) {\n            if (edge.label >= 0)\n                return;\n            edgeRingStarts.push(edge);\n            var e = edge;\n            do {\n                e.label = label;\n                e = e.next;\n            } while (!edge.isEqual(e));\n            label++;\n        });\n        return edgeRingStarts;\n    };\n    /**\n     * Computes the EdgeRings formed by the edges in this graph.\n     *\n     * @returns {EdgeRing[]} - A list of all the EdgeRings in the graph.\n     */\n    Graph.prototype.getEdgeRings = function () {\n        var _this = this;\n        this._computeNextCWEdges();\n        // Clear labels\n        this.edges.forEach(function (edge) {\n            edge.label = undefined;\n        });\n        this._findLabeledEdgeRings().forEach(function (edge) {\n            // convertMaximalToMinimalEdgeRings\n            _this._findIntersectionNodes(edge).forEach(function (node) {\n                _this._computeNextCCWEdges(node, edge.label);\n            });\n        });\n        var edgeRingList = [];\n        // find all edgerings\n        this.edges.forEach(function (edge) {\n            if (edge.ring)\n                return;\n            edgeRingList.push(_this._findEdgeRing(edge));\n        });\n        return edgeRingList;\n    };\n    /**\n     * Find all nodes in a Maxima EdgeRing which are self-intersection nodes.\n     *\n     * @param {Node} startEdge - Start Edge of the Ring\n     * @returns {Node[]} - intersection nodes\n     */\n    Graph.prototype._findIntersectionNodes = function (startEdge) {\n        var intersectionNodes = [];\n        var edge = startEdge;\n        var _loop_1 = function () {\n            // getDegree\n            var degree = 0;\n            edge.from.getOuterEdges().forEach(function (e) {\n                if (e.label === startEdge.label)\n                    ++degree;\n            });\n            if (degree > 1)\n                intersectionNodes.push(edge.from);\n            edge = edge.next;\n        };\n        do {\n            _loop_1();\n        } while (!startEdge.isEqual(edge));\n        return intersectionNodes;\n    };\n    /**\n     * Get the edge-ring which starts from the provided Edge.\n     *\n     * @param {Edge} startEdge - starting edge of the edge ring\n     * @returns {EdgeRing} - EdgeRing which start Edge is the provided one.\n     */\n    Graph.prototype._findEdgeRing = function (startEdge) {\n        var edge = startEdge;\n        var edgeRing = new EdgeRing();\n        do {\n            edgeRing.push(edge);\n            edge.ring = edgeRing;\n            edge = edge.next;\n        } while (!startEdge.isEqual(edge));\n        return edgeRing;\n    };\n    /**\n     * Removes a node from the Graph.\n     *\n     * It also removes edges asociated to that node\n     * @param {Node} node - Node to be removed\n     */\n    Graph.prototype.removeNode = function (node) {\n        var _this = this;\n        node.getOuterEdges().forEach(function (edge) { return _this.removeEdge(edge); });\n        node.innerEdges.forEach(function (edge) { return _this.removeEdge(edge); });\n        delete this.nodes[node.id];\n    };\n    /**\n     * Remove edge from the graph and deletes the edge.\n     *\n     * @param {Edge} edge - Edge to be removed\n     */\n    Graph.prototype.removeEdge = function (edge) {\n        this.edges = this.edges.filter(function (e) { return !e.isEqual(edge); });\n        edge.deleteEdge();\n    };\n    return Graph;\n}());\nexport default Graph;\n","import bbox from '@turf/bbox';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport distance from '@turf/distance';\nimport scale from '@turf/transform-scale';\nimport cleanCoords from '@turf/clean-coords';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport { getCoord, getType, getGeom } from '@turf/invariant';\nimport { isObject, featureCollection, isNumber, point, feature, lineString } from '@turf/helpers';\n\n// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\nfunction pathTo(node) {\n  var curr = node,\n    path = [];\n  while (curr.parent) {\n    path.unshift(curr);\n    curr = curr.parent;\n  }\n  return path;\n}\n\nfunction getHeap() {\n  return new BinaryHeap(function (node) {\n    return node.f;\n  });\n}\n\n/**\n * Astar\n * @private\n */\nvar astar = {\n  /**\n   * Perform an A* Search on a graph given a start and end node.\n   *\n   * @private\n   * @memberof astar\n   * @param {Graph} graph Graph\n   * @param {GridNode} start Start\n   * @param {GridNode} end End\n   * @param {Object} [options] Options\n   * @param {bool} [options.closest] Specifies whether to return the path to the closest node if the target is unreachable.\n   * @param {Function} [options.heuristic] Heuristic function (see astar.heuristics).\n   * @returns {Object} Search\n   */\n  search: function (graph, start, end, options) {\n    graph.cleanDirty();\n    options = options || {};\n    var heuristic = options.heuristic || astar.heuristics.manhattan,\n      closest = options.closest || false;\n\n    var openHeap = getHeap(),\n      closestNode = start; // set the start node to be the closest if required\n\n    start.h = heuristic(start, end);\n\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.pop();\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true;\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.neighbors(currentNode);\n\n      for (var i = 0, il = neighbors.length; i < il; ++i) {\n        var neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          // Not a valid node to process, skip to next neighbor.\n          continue;\n        }\n\n        // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n        var gScore = currentNode.g + neighbor.getCost(currentNode),\n          beenVisited = neighbor.visited;\n\n        if (!beenVisited || gScore < neighbor.g) {\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markDirty(neighbor);\n          if (closest) {\n            // If the neighbour is closer than the current closestNode or if it's equally close but has\n            // a cheaper path than the current closest node then it becomes the closest node\n            if (\n              neighbor.h < closestNode.h ||\n              (neighbor.h === closestNode.h && neighbor.g < closestNode.g)\n            ) {\n              closestNode = neighbor;\n            }\n          }\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbor);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    // No result was found - empty array signifies failure to find path.\n    return [];\n  },\n  // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n  heuristics: {\n    manhattan: function (pos0, pos1) {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    },\n    diagonal: function (pos0, pos1) {\n      var D = 1;\n      var D2 = Math.sqrt(2);\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n    },\n  },\n  cleanNode: function (node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  },\n};\n\n/**\n * A graph memory structure\n *\n * @private\n * @param {Array} gridIn 2D array of input weights\n * @param {Object} [options] Options\n * @param {boolean} [options.diagonal] Specifies whether diagonal moves are allowed\n * @returns {void} Graph\n */\nfunction Graph(gridIn, options) {\n  options = options || {};\n  this.nodes = [];\n  this.diagonal = !!options.diagonal;\n  this.grid = [];\n  for (var x = 0; x < gridIn.length; x++) {\n    this.grid[x] = [];\n\n    for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n      var node = new GridNode(x, y, row[y]);\n      this.grid[x][y] = node;\n      this.nodes.push(node);\n    }\n  }\n  this.init();\n}\n\nGraph.prototype.init = function () {\n  this.dirtyNodes = [];\n  for (var i = 0; i < this.nodes.length; i++) {\n    astar.cleanNode(this.nodes[i]);\n  }\n};\n\nGraph.prototype.cleanDirty = function () {\n  for (var i = 0; i < this.dirtyNodes.length; i++) {\n    astar.cleanNode(this.dirtyNodes[i]);\n  }\n  this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function (node) {\n  this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function (node) {\n  var ret = [],\n    x = node.x,\n    y = node.y,\n    grid = this.grid;\n\n  // West\n  if (grid[x - 1] && grid[x - 1][y]) {\n    ret.push(grid[x - 1][y]);\n  }\n\n  // East\n  if (grid[x + 1] && grid[x + 1][y]) {\n    ret.push(grid[x + 1][y]);\n  }\n\n  // South\n  if (grid[x] && grid[x][y - 1]) {\n    ret.push(grid[x][y - 1]);\n  }\n\n  // North\n  if (grid[x] && grid[x][y + 1]) {\n    ret.push(grid[x][y + 1]);\n  }\n\n  if (this.diagonal) {\n    // Southwest\n    if (grid[x - 1] && grid[x - 1][y - 1]) {\n      ret.push(grid[x - 1][y - 1]);\n    }\n\n    // Southeast\n    if (grid[x + 1] && grid[x + 1][y - 1]) {\n      ret.push(grid[x + 1][y - 1]);\n    }\n\n    // Northwest\n    if (grid[x - 1] && grid[x - 1][y + 1]) {\n      ret.push(grid[x - 1][y + 1]);\n    }\n\n    // Northeast\n    if (grid[x + 1] && grid[x + 1][y + 1]) {\n      ret.push(grid[x + 1][y + 1]);\n    }\n  }\n\n  return ret;\n};\n\nGraph.prototype.toString = function () {\n  var graphString = [],\n    nodes = this.grid, // when using grid\n    rowDebug,\n    row,\n    y,\n    l;\n  for (var x = 0, len = nodes.length; x < len; x++) {\n    rowDebug = [];\n    row = nodes[x];\n    for (y = 0, l = row.length; y < l; y++) {\n      rowDebug.push(row[y].weight);\n    }\n    graphString.push(rowDebug.join(\" \"));\n  }\n  return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n  this.x = x;\n  this.y = y;\n  this.weight = weight;\n}\n\nGridNode.prototype.toString = function () {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function (fromNeighbor) {\n  // Take diagonal weight into consideration.\n  if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n    return this.weight * 1.41421;\n  }\n  return this.weight;\n};\n\nGridNode.prototype.isWall = function () {\n  return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function (element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n\n    // Allow it to sink down.\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function () {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function (node) {\n    var i = this.content.indexOf(node);\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function () {\n    return this.content.length;\n  },\n  rescoreElement: function (node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function (n) {\n    // Fetch the element that has to be sunk.\n    var element = this.content[n];\n\n    // When at 0, an element can not sink any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1,\n        parent = this.content[parentN];\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n        // Found a parent that is less, no need to sink any further.\n      } else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function (n) {\n    // Look up the target element and its score.\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) << 1,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element, if any.\n      var swap = null,\n        child1Score;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n        // Otherwise, we are done.\n      } else {\n        break;\n      }\n    }\n  },\n};\n\n/**\n * Returns the shortest {@link LineString|path} from {@link Point|start} to {@link Point|end} without colliding with\n * any {@link Feature} in {@link FeatureCollection<Polygon>| obstacles}\n *\n * @name shortestPath\n * @param {Coord} start point\n * @param {Coord} end point\n * @param {Object} [options={}] optional parameters\n * @param {Geometry|Feature|FeatureCollection<Polygon>} [options.obstacles] areas which path cannot travel\n * @param {number} [options.minDistance] minimum distance between shortest path and obstacles\n * @param {string} [options.units='kilometers'] unit in which resolution & minimum distance will be expressed in; it can be degrees, radians, miles, kilometers, ...\n * @param {number} [options.resolution=100] distance between matrix points on which the path will be calculated\n * @returns {Feature<LineString>} shortest path between start and end\n * @example\n * var start = [-5, -6];\n * var end = [9, -6];\n * var options = {\n *   obstacles: turf.polygon([[[0, -7], [5, -7], [5, -3], [0, -3], [0, -7]]])\n * };\n *\n * var path = turf.shortestPath(start, end, options);\n *\n * //addToMap\n * var addToMap = [start, end, options.obstacles, path];\n */\nfunction shortestPath(start, end, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var resolution = options.resolution;\n  var minDistance = options.minDistance;\n  var obstacles = options.obstacles || featureCollection([]);\n\n  // validation\n  if (!start) throw new Error(\"start is required\");\n  if (!end) throw new Error(\"end is required\");\n  if ((resolution && !isNumber(resolution)) || resolution <= 0)\n    throw new Error(\"options.resolution must be a number, greater than 0\");\n  if (minDistance)\n    throw new Error(\"options.minDistance is not yet implemented\");\n\n  // Normalize Inputs\n  var startCoord = getCoord(start);\n  var endCoord = getCoord(end);\n  start = point(startCoord);\n  end = point(endCoord);\n\n  // Handle obstacles\n  switch (getType(obstacles)) {\n    case \"FeatureCollection\":\n      if (obstacles.features.length === 0)\n        return lineString([startCoord, endCoord]);\n      break;\n    case \"Polygon\":\n      obstacles = featureCollection([feature(getGeom(obstacles))]);\n      break;\n    default:\n      throw new Error(\"invalid obstacles\");\n  }\n\n  // define path grid area\n  var collection = obstacles;\n  collection.features.push(start);\n  collection.features.push(end);\n  var box = bbox(scale(bboxPolygon(bbox(collection)), 1.15)); // extend 15%\n  if (!resolution) {\n    var width = distance([box[0], box[1]], [box[2], box[1]], options);\n    resolution = width / 100;\n  }\n  collection.features.pop();\n  collection.features.pop();\n\n  var west = box[0];\n  var south = box[1];\n  var east = box[2];\n  var north = box[3];\n\n  var xFraction = resolution / distance([west, south], [east, south], options);\n  var cellWidth = xFraction * (east - west);\n  var yFraction = resolution / distance([west, south], [west, north], options);\n  var cellHeight = yFraction * (north - south);\n\n  var bboxHorizontalSide = east - west;\n  var bboxVerticalSide = north - south;\n  var columns = Math.floor(bboxHorizontalSide / cellWidth);\n  var rows = Math.floor(bboxVerticalSide / cellHeight);\n  // adjust origin of the grid\n  var deltaX = (bboxHorizontalSide - columns * cellWidth) / 2;\n  var deltaY = (bboxVerticalSide - rows * cellHeight) / 2;\n\n  // loop through points only once to speed up process\n  // define matrix grid for A-star algorithm\n  var pointMatrix = [];\n  var matrix = [];\n\n  var closestToStart = [];\n  var closestToEnd = [];\n  var minDistStart = Infinity;\n  var minDistEnd = Infinity;\n  var currentY = north - deltaY;\n  var r = 0;\n  while (currentY >= south) {\n    // var currentY = south + deltaY;\n    var matrixRow = [];\n    var pointMatrixRow = [];\n    var currentX = west + deltaX;\n    var c = 0;\n    while (currentX <= east) {\n      var pt = point([currentX, currentY]);\n      var isInsideObstacle = isInside(pt, obstacles);\n      // feed obstacles matrix\n      matrixRow.push(isInsideObstacle ? 0 : 1); // with javascript-astar\n      // matrixRow.push(isInsideObstacle ? 1 : 0); // with astar-andrea\n      // map point's coords\n      pointMatrixRow.push(currentX + \"|\" + currentY);\n      // set closest points\n      var distStart = distance(pt, start);\n      // if (distStart < minDistStart) {\n      if (!isInsideObstacle && distStart < minDistStart) {\n        minDistStart = distStart;\n        closestToStart = { x: c, y: r };\n      }\n      var distEnd = distance(pt, end);\n      // if (distEnd < minDistEnd) {\n      if (!isInsideObstacle && distEnd < minDistEnd) {\n        minDistEnd = distEnd;\n        closestToEnd = { x: c, y: r };\n      }\n      currentX += cellWidth;\n      c++;\n    }\n    matrix.push(matrixRow);\n    pointMatrix.push(pointMatrixRow);\n    currentY -= cellHeight;\n    r++;\n  }\n\n  // find path on matrix grid\n\n  // javascript-astar ----------------------\n  var graph = new Graph(matrix, { diagonal: true });\n  var startOnMatrix = graph.grid[closestToStart.y][closestToStart.x];\n  var endOnMatrix = graph.grid[closestToEnd.y][closestToEnd.x];\n  var result = astar.search(graph, startOnMatrix, endOnMatrix);\n\n  var path = [startCoord];\n  result.forEach(function (coord) {\n    var coords = pointMatrix[coord.x][coord.y].split(\"|\");\n    path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n  });\n  path.push(endCoord);\n  // ---------------------------------------\n\n  // astar-andrea ------------------------\n  // var result = aStar(matrix, [closestToStart.x, closestToStart.y], [closestToEnd.x, closestToEnd.y], 'DiagonalFree');\n  // var path = [start.geometry.coordinates];\n  // result.forEach(function (coord) {\n  //     var coords = pointMatrix[coord[1]][coord[0]].split('|');\n  //     path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n  // });\n  // path.push(end.geometry.coordinates);\n  // ---------------------------------------\n\n  return cleanCoords(lineString(path));\n}\n\n/**\n * Checks if Point is inside any of the Polygons\n *\n * @private\n * @param {Feature<Point>} pt to check\n * @param {FeatureCollection<Polygon>} polygons features\n * @returns {boolean} if inside or not\n */\nfunction isInside(pt, polygons) {\n  for (var i = 0; i < polygons.features.length; i++) {\n    if (booleanPointInPolygon(pt, polygons.features[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default shortestPath;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ObjectOnSignature<void>}\n         */\n        _this.un;\n        // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = \"change:\".concat(key);\n        if (this.hasListener(eventType)) {\n            this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        }\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        if (this.hasListener(eventType)) {\n            this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        }\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.addChangeListener = function (key, listener) {\n        this.addEventListener(\"change:\".concat(key), listener);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.removeChangeListener = function (key, listener) {\n        this.removeEventListener(\"change:\".concat(key), listener);\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean} [opt_silent] Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n/**\n * @typedef {'propertychange'} Types\n */\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        _this.on =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onInternal);\n        _this.once =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onceInternal);\n        _this.un = /** @type {ObservableOnSignature<void>} */ (_this.unInternal);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onInternal = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onceInternal = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @protected\n     */\n    Observable.prototype.unInternal = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n    /**\n     * Triggered when loading of additional map data (tiles, images, features) starts.\n     * @event module:ol/render/Event~RenderEvent#loadstart\n     * @api\n     */\n    LOADSTART: 'loadstart',\n    /**\n     * Triggered when loading of additional map data has completed.\n     * @event module:ol/render/Event~RenderEvent#loadend\n     * @api\n     */\n    LOADEND: 'loadend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { containsExtent } from './extent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { outerHeight, outerWidth, removeChildren, removeNode } from './dom.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning',\n};\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {OverlayOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst =\n            options.insertFirst !== undefined ? options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className =\n            options.className !== undefined\n                ? options.className\n                : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        _this.element.style.pointerEvents = 'auto';\n        var autoPan = options.autoPan;\n        if (autoPan && 'object' !== typeof autoPan) {\n            autoPan = {\n                animation: options.autoPanAnimation,\n                margin: options.autoPanMargin,\n            };\n        }\n        /**\n         * @protected\n         * @type {PanIntoViewOptions|false}\n         */\n        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n        /**\n         * @protected\n         * @type {{transform_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            transform_: '',\n            visible: true,\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addChangeListener(Property.ELEMENT, _this.handleElementChanged);\n        _this.addChangeListener(Property.MAP, _this.handleMapChanged);\n        _this.addChangeListener(Property.OFFSET, _this.handleOffsetChanged);\n        _this.addChangeListener(Property.POSITION, _this.handlePositionChanged);\n        _this.addChangeListener(Property.POSITIONING, _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined\n            ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n            : OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|null} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return /** @type {import(\"./PluggableMap.js\").default|null} */ (this.get(Property.MAP) || null);\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(Property.POSITIONING));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent\n                ? map.getOverlayContainerStopEvent()\n                : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n            this.performAutoPan();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        this.performAutoPan();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n     * overlay is part of. Pass `null` to just remove the overlay from the current map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary) using the configured autoPan parameters\n     * @protected\n     */\n    Overlay.prototype.performAutoPan = function () {\n        if (this.autoPan) {\n            this.panIntoView(this.autoPan);\n        }\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n     * @api\n     */\n    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [\n            outerWidth(element),\n            outerHeight(element),\n        ]);\n        var panIntoViewOptions = opt_panIntoViewOptions || {};\n        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - myMargin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + myMargin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - myMargin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + myMargin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                if (!centerPx) {\n                    return;\n                }\n                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n                var panOptions = panIntoViewOptions.animation || {};\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: panOptions.duration,\n                    easing: panOptions.easing,\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var x = Math.round(pixel[0] + offset[0]) + 'px';\n        var y = Math.round(pixel[1] + offset[1]) + 'px';\n        var posX = '0%';\n        var posY = '0%';\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            posX = '-100%';\n        }\n        else if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.TOP_CENTER) {\n            posX = '-50%';\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            posY = '-100%';\n        }\n        else if (positioning == OverlayPositioning.CENTER_LEFT ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.CENTER_RIGHT) {\n            posY = '-50%';\n        }\n        var transform = \"translate(\".concat(posX, \", \").concat(posY, \") translate(\").concat(x, \", \").concat(y, \")\");\n        if (this.rendered.transform_ != transform) {\n            this.rendered.transform_ = transform;\n            style.transform = transform;\n            // @ts-ignore IE9\n            style.msTransform = transform;\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (typeof direction === 'function') {\n                        if (direction(target, arr[i - 1], arr[i]) > 0) {\n                            return i - 1;\n                        }\n                        else {\n                            return i;\n                        }\n                    }\n                    else if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n    return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n//# sourceMappingURL=css.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * @type {boolean}\n         */\n        this.defaultPrevented;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n     * will be fired.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.defaultPrevented = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*} [opt_target] Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var isString = typeof event === 'string';\n        var type = isString ? event : event.type;\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (!listeners) {\n            return;\n        }\n        var evt = isString ? new Event(event) : /** @type {Event} */ (event);\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var dispatching = this.dispatching_ || (this.dispatching_ = {});\n        var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n        if (!(type in dispatching)) {\n            dispatching[type] = 0;\n            pendingRemovals[type] = 0;\n        }\n        ++dispatching[type];\n        var propagate;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            if ('handleEvent' in listeners[i]) {\n                propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n            }\n            else {\n                propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n            }\n            if (propagate === false || evt.propagationStopped) {\n                propagate = false;\n                break;\n            }\n        }\n        if (--dispatching[type] === 0) {\n            var pr = pendingRemovals[type];\n            delete pendingRemovals[type];\n            while (pr--) {\n                this.removeEventListener(type, VOID);\n            }\n            delete dispatching[type];\n        }\n        return propagate;\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string} [opt_type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FeatureOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addChangeListener(_this.geometryName_, _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature<Geometry>} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = /** @type {Feature<Geometry>} */ (new Feature(this.hasProperties() ? this.getProperties() : null));\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>} [opt_geometries] Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var ret;\n    offset += stride;\n    for (; offset < end; offset += stride) {\n        ret = callback(flatCoordinates.slice(offset - stride, offset), flatCoordinates.slice(offset, offset + stride));\n        if (ret) {\n            return ret;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // https://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout} [opt_layout] Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n    // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n    var endss = [];\n    var offset = 0;\n    var prevEndIndex = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        // classifies an array of rings into polygons with outer rings and holes\n        if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i + 1));\n        }\n        else {\n            if (endss.length === 0) {\n                continue;\n            }\n            endss[endss.length - 1].push(ends[prevEndIndex]);\n        }\n        prevEndIndex = i + 1;\n        offset = end;\n    }\n    return endss;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing|null} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            /**\n             * @type {import(\"../proj/Projection.js\").default}\n             */\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        _this.supportedMediaTypes = [\n            'application/geo+json',\n            'application/vnd.geo+json',\n        ];\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n    function promiseGetter() {\n        var value;\n        try {\n            value = getter();\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n        if (value instanceof Promise) {\n            return value;\n        }\n        return Promise.resolve(value);\n    }\n    return promiseGetter();\n}\n//# sourceMappingURL=functions.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*> | null} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport var SAFARI_BUG_237906 = SAFARI &&\n    !!(ua.indexOf('version/15.4') >= 0 ||\n        ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n    MAP: 'map',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseLayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {BackgroundColor|false}\n         * @private\n         */\n        _this.background_ = options.background;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        if (typeof options.properties === 'object') {\n            delete properties.properties;\n            assign(properties, options.properties);\n        }\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? properties.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * Get the background for this layer.\n     * @return {BackgroundColor|false} Layer background.\n     */\n    BaseLayer.prototype.getBackground = function () {\n        return this.background_;\n    };\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean} [opt_managed] Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Sets the background color.\n     * @param {BackgroundColor} [opt_background] Background color.\n     */\n    BaseLayer.prototype.setBackground = function (opt_background) {\n        this.background_ = opt_background;\n        this.changed();\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options<SourceType>} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {LayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {RendererType}\n         */\n        _this.renderer_ = null;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.rendered = false;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType|null} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {SourceType|null} The source being rendered.\n     */\n    Layer.prototype.getRenderSource = function () {\n        return this.getSource();\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        if (!this.renderer_) {\n            return new Promise(function (resolve) { return resolve([]); });\n        }\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     */\n    Layer.prototype.getData = function (pixel) {\n        if (!this.renderer_ || !this.rendered) {\n            return null;\n        }\n        return this.renderer_.getData(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            this.rendered = true;\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Called when a layer is not visible during a map render.\n     */\n    Layer.prototype.unrender = function () {\n        this.rendered = false;\n    };\n    /**\n     * For use inside the library only.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     */\n    Layer.prototype.setMapInternal = function (map) {\n        if (!map) {\n            this.unrender();\n        }\n        this.set(LayerProperty.MAP, map);\n    };\n    /**\n     * For use inside the library only.\n     * @return {import(\"../PluggableMap.js\").default|null} Map.\n     */\n    Layer.prototype.getMapInternal = function () {\n        return this.get(LayerProperty.MAP);\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map~Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = \n                /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType|null} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {RendererType|null} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {RendererType} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        if (this.renderer_) {\n            this.renderer_.dispose();\n            delete this.renderer_;\n        }\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options<VectorSourceType>} [opt_options] Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style/Style~Style} for information on the default style.\n     * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case GeometryType.MULTI_POLYGON:\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.POLYGON:\n            case GeometryType.MULTI_LINE_STRING:\n                builderEnds = [];\n                flatCoordinates =\n                    type == GeometryType.POLYGON\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.LINE_STRING:\n            case GeometryType.CIRCLE:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case GeometryType.MULTI_POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case GeometryType.POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0] * this.imagePixelRatio_;\n        this.originY_ = origin[1] * this.imagePixelRatio_;\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * The renderer is initialized and ready to render.\n         * @type {boolean}\n         */\n        _this.ready = true;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     */\n    LayerRenderer.prototype.getData = function (pixel) {\n        return null;\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    /**\n     * Clean up.\n     */\n    LayerRenderer.prototype.disposeInternal = function () {\n        delete this.layer_;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n         * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n         * context.\n         * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { asArray } from '../../color.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { equals } from '../../array.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.pixelContext_ = null;\n        /**\n         * @protected\n         * @type {import(\"../../PluggableMap.js\").FrameState|null}\n         */\n        _this.frameState = null;\n        return _this;\n    }\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number} col The column index.\n     * @param {number} row The row index.\n     * @return {Uint8ClampedArray|null} The image data.\n     */\n    CanvasLayerRenderer.prototype.getImageData = function (image, col, row) {\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            return null;\n        }\n        return data;\n    };\n    /**\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     * @return {string} Background color.\n     */\n    CanvasLayerRenderer.prototype.getBackground = function (frameState) {\n        var layer = this.getLayer();\n        var background = layer.getBackground();\n        if (typeof background === 'function') {\n            background = background(frameState.viewState.resolution);\n        }\n        return background || undefined;\n    };\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     * @param {string} [opt_backgroundColor] Background color.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity, opt_backgroundColor) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.className === layerClassName &&\n            target.style.opacity === '' &&\n            opacity === 1 &&\n            (!opt_backgroundColor ||\n                (target.style.backgroundColor &&\n                    equals(asArray(target.style.backgroundColor), asArray(opt_backgroundColor))))) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            if (opt_backgroundColor) {\n                style.backgroundColor = opt_backgroundColor;\n            }\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.frameState = frameState;\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var x = Math.round(renderPixel[0]);\n        var y = Math.round(renderPixel[1]);\n        var pixelContext = this.pixelContext_;\n        if (!pixelContext) {\n            var pixelCanvas = document.createElement('canvas');\n            pixelCanvas.width = 1;\n            pixelCanvas.height = 1;\n            pixelContext = pixelCanvas.getContext('2d');\n            this.pixelContext_ = pixelContext;\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                this.pixelContext_ = null;\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    /**\n     * Clean up.\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        delete this.frameState;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    var previousAngle;\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        previousAngle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle += previousAngle > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n        return result;\n    }\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate =\n            segmentLength === 0\n                ? 0\n                : (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = horizontalTextAlign(textIsArray ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            var index = dd - d;\n                            if (!declutterImageWithText[index]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[index] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[index];\n                            delete declutterImageWithText[index];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    var listening = true;\n    var decoding = false;\n    var loaded = false;\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, function () {\n            loaded = true;\n            if (!decoding) {\n                loadHandler();\n            }\n        }),\n    ];\n    if (img.src && IMAGE_DECODE) {\n        decoding = true;\n        img\n            .decode()\n            .then(function () {\n            if (listening) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening) {\n                if (loaded) {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n    }\n    else {\n        listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n    }\n    return function unlisten() {\n        listening = false;\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n    var factor = Math.pow(10, decimals);\n    return Math.round(n * factor) / factor;\n}\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n    return Math.round(toFixed(n, decimals));\n}\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n    return Math.floor(toFixed(n, decimals));\n}\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n    return Math.ceil(toFixed(n, decimals));\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string} [opt_axisOrientation] Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { equals, getWorldsAway } from './coordinate.js';\nimport { getDistance } from './sphere.js';\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\nvar showCoordinateWarning = true;\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n    var hide = opt_disable === undefined ? true : opt_disable;\n    showCoordinateWarning = !hide;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    disableCoordinateWarning();\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {Projection|null}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        if (showCoordinateWarning &&\n            !equals(coordinate, [0, 0]) &&\n            coordinate[0] >= -180 &&\n            coordinate[0] <= 180 &&\n            coordinate[1] >= -90 &&\n            coordinate[1] <= 90) {\n            showCoordinateWarning = false;\n            // eslint-disable-next-line no-console\n            console.warn('Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.');\n        }\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(sourceProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n        : resolution;\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(destProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n        : resolution;\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Radians\n     * @api\n     */\n    RADIANS: 'radians',\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nvar unitByCode = {\n    '9001': Units.METERS,\n    '9002': Units.FEET,\n    '9003': Units.USFEET,\n    '9101': Units.RADIANS,\n    '9102': Units.DEGREES,\n};\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n    return unitByCode[code];\n}\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = !!options.interpolate;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|null} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {boolean} Use linear interpolation when resampling.\n     */\n    Source.prototype.getInterpolate = function () {\n        return this.interpolate_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\nimport { fromUserExtent, fromUserResolution, toUserExtent } from './proj.js';\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n        var z = tileGrid.getZForResolution(fromUserResolution(resolution, projection));\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(fromUserExtent(extent, projection), z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n     *      Function called when loading succeeded.\n     * @param {function(): void} [failure] Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            source.addFeatures(features);\n            if (success !== undefined) {\n                success(features);\n            }\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        var size = this.size_;\n        if (!size) {\n            return null;\n        }\n        var displacement = this.getDisplacement();\n        return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        this.canvas_ = {};\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/transform\n */\nimport { WORKER_OFFSCREEN_CANVAS } from './has.js';\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * @type {HTMLElement}\n * @private\n */\nvar transformStringDiv;\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    var transformString = 'matrix(' + mat.join(', ') + ')';\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return transformString;\n    }\n    var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n    node.style.transform = transformString;\n    return node.style.transform;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.14.1';\n//# sourceMappingURL=util.js.map"],"names":["module","exports","t","e","n","i","a","l","call","m","c","d","o","Object","defineProperty","configurable","enumerable","get","__esModule","default","prototype","hasOwnProperty","p","s","value","props","startVal","type","Number","required","endVal","duration","autoplay","Boolean","decimals","validator","decimal","String","separator","prefix","suffix","useEasing","easingFn","Function","Math","pow","data","localStartVal","this","displayValue","formatNumber","printVal","paused","localDuration","startTime","timestamp","remaining","rAF","computed","countDown","watch","start","mounted","$emit","methods","requestAnimationFrame","count","pauseResume","resume","pause","cancelAnimationFrame","reset","isNumber","isNaN","parseFloat","toFixed","split","length","test","replace","destroyed","window","Vue","component","r","u","Date","getTime","max","setTimeout","clearTimeout","options","render","staticRenderFns","_scopeId","create","keys","forEach","esModule","$createElement","_self","_c","_v","_s","geom","properties","feat","id","bbox","geometry","coordinates","Error","Array","isArray","_i","coordinates_1","ring","j","num","geojson","callback","excludeWrapCoord","k","stopG","coords","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","features","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","geomType","g","featureProperties","featureBBox","featureId","undefined","coordinate","result","Infinity","coord","point","polygon","pt","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","isInside","slice","xi","yi","xj","yj","cleanLine","line","points","equals","newPoints","secondToLast","newPointsLength","push","prevAddedPoint","isPointOnLineSegment","splice","pt1","pt2","end","x","y","startX","startY","endX","endY","dxl","dyl","abs","mutate","_name","newCoords","polygons","polyPoints","existing","key","join","cloneFeature","cloned","cloneProperties","cloneGeometry","map","item","deepSlice","feature","cloneFeatureCollection","getSqSegDist","p1","p2","dx","dy","simplifyDPStep","first","last","sqTolerance","simplified","index","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","prevPoint","len","simplifyRadialDist","simplifyLine","highQuality","z","simplifyPolygon","pts","simpleRing","checkValidity","input","constructor","lines","rings","simplifyGeom","Spline","sharpness","centers","controls","stepLength","delay","dz","steps","cacheSteps","mindist","laststep","pos","step","sqrt","vector","angle","atan2","speed","time","t2","floor","c1","c2","b","B","bezier","west","south","east","north","lowLeft","D2R","PI","R2D","Coord","lon","lat","view","antipode","anti_lat","anti_lon","LineString","move_to","Arc","json","multiline","wkt","wkt_string","collect","substring","GreatCircle","w","h","sin","cos","asin","interpolate","f","A","npoints","first_pass","delta","pair","bHasBigDiff","dfMaxSmallDiffLong","dfDateLineOffset","offset","dfLeftBorderX","dfRightBorderX","dfDiffSpace","dfPrevX","dfX","dfDiffLong","poMulti","poNewLS","dfX0","dfX1","dfY1","dfX2","dfY2","tmpX","tmpY","dfRatio","dfY","poNewLS0","arc","j0","isoBandNextXTL","isoBandNextYTL","isoBandNextOTL","isoBandNextXTR","isoBandNextYTR","isoBandNextOTR","isoBandNextXRT","isoBandNextYRT","isoBandNextORT","isoBandNextXRB","isoBandNextYRB","isoBandNextORB","isoBandNextXBL","isoBandNextYBL","isoBandNextOBL","isoBandNextXBR","isoBandNextYBR","isoBandNextOBR","isoBandNextXLT","isoBandNextYLT","isoBandNextOLT","isoBandNextXLB","isoBandNextYLB","isoBandNextOLB","p00","cell","bottomleft","leftbottom","p01","rightbottom","bottomright","p02","topright","righttop","p03","lefttop","topleft","p04","p05","p06","p07","isoBandEdgeRT","isoBandEdgeRB","isoBandEdgeBR","isoBandEdgeBL","isoBandEdgeLB","isoBandEdgeLT","isoBandEdgeTL","isoBandEdgeTR","polygon_table","orientationIndex","q","dx1","dy1","dx2","dy2","envelopeContains","self","env","every","Node","buildId","innerEdges","outerEdges","outerEdgesSorted","removeInnerEdge","edge","filter","from","removeOuterEdge","to","addOuterEdge","sortOuterEdges","_this","sort","aNode","bNode","det","getOuterEdges","getOuterEdge","addInnerEdge","Edge","next","label","symetric","getSymetric","deleteEdge","isEqual","toString","toLineString","compareTo","EdgeRing","edges","envelope","some","isValid","isHole","hiIndex","reduce","high","iPrev","iNext","disc","toMultiPoint","toPolygon","getEnvelope","findEdgeRingContaining","testEdgeRing","shellList","minEnvelope","minShell","testEnvelope","shell","env1","env2","envX1","envY1","envX2","envY2","tryEnvelope","apply","min","testEdgeRingCoordinates","testPoint","_loop_1","coord1","coord2","testEdgeRingCoordinates_1","inside","Graph","nodes","fromGeoJson","geoJson","validateGeoJson","graph","initialValue","previousValue","name","prev","cur","getNode","addEdge","currentCoord","node","symetricEdge","deleteDangles","_removeIfDangle","outerNodes","removeNode","deleteCutEdges","_computeNextCWEdges","_findLabeledEdgeRings","removeEdge","_computeNextCCWEdges","firstOutDE","prevInDE","de","sym","outDE","inDE","edgeRingStarts","getEdgeRings","_findIntersectionNodes","edgeRingList","_findEdgeRing","startEdge","intersectionNodes","degree","edgeRing","pathTo","curr","path","parent","unshift","astar","search","cleanDirty","heuristic","heuristics","manhattan","closest","openHeap","BinaryHeap","closestNode","size","currentNode","pop","closed","neighbors","il","neighbor","isWall","gScore","getCost","beenVisited","visited","markDirty","rescoreElement","pos0","pos1","diagonal","D2","d1","d2","cleanNode","gridIn","grid","row","GridNode","init","weight","scoreFunction","content","dirtyNodes","ret","rowDebug","graphString","fromNeighbor","element","sinkDown","bubbleUp","remove","indexOf","parentN","elemScore","child1Score","child2N","child1N","swap","child1","child2","extendStatics","__extends","setPrototypeOf","__proto__","TypeError","__","_super","AssertionError","code","message","IDLE","LOADING","LOADED","ERROR","EMPTY","ObjectEvent","oldValue","BaseObject","opt_values","on","once","un","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","hasListener","dispatchEvent","addChangeListener","listener","addEventListener","removeChangeListener","removeEventListener","set","opt_silent","values","applyProperties","source","unset","PROPERTYCHANGE","Observable","revision_","changed","getRevision","onInternal","onceInternal","ol_key","unInternal","ii","unByKey","Property","Overlay","insertFirst","stopEvent","document","createElement","className","style","position","pointerEvents","autoPan","animation","autoPanAnimation","margin","autoPanMargin","rendered","transform_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getId","getMap","getOffset","getPosition","getPositioning","appendChild","MapEventType","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","setMap","panIntoView","opt_panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animateInternal","getCoordinateFromPixelInternal","easing","box","getBoundingClientRect","offsetX","left","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","round","posX","posY","transform","msTransform","getOptions","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","found","reverseSubArray","arr","begin","tmp","extend","extension","arr1","arr2","len1","assert","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","getComputedStyle","removeChild","cache","cacheSize","fromString","exec","hasAlpha","parseInt","substr","normalize","fromStringInternal_","asArray","asColorLike","CLASS_SELECTABLE","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","variant","families","family","cssOpacity","opacity","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","OffscreenCanvas","width","height","getContext","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","parentNode","removeChildren","lastChild","listen","target","opt_this","opt_once","bind","originalListener_1","arguments","eventsKey","listenOnce","unlistenByKey","BaseEvent","propagationStopped","defaultPrevented","preventDefault","stopPropagation","CHANGE","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","Disposable","disposed","dispose","disposeInternal","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","event","isString","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","buffer","extent","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extendCoordinate","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getCenter","getHeight","getWidth","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","slope","applyTransform","transformFn","opt_stops","xs","ys","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","ARRAY_BUFFER","JSON","TEXT","XML","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getStyleFunction","handleGeometryChange_","EventType","opt_style","obj","styles_1","createStyleFunction","setId","cloneGeometries","clonedGeometries","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","getType","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","GeometryType","intersectsExtent","isEmpty","rotate","anchor","scale","sx","opt_sy","opt_anchor","translate","deltaX","deltaY","Geometry","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","getUnits","Units","setWorldExtent","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","power_1","getObject","object","parse","JSONFeature","FormatType","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","assignClosest","offset1","offset2","x1","y1","maxSquaredDelta","x2","y2","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","NaN","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","interpolatePoint","fraction","opt_dest","opt_dimension","length_1","cumulativeLengths","dimension","dest","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","point1","point2","intersectsLinearRingArray","intersectsLinearRing","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","lineString","layout","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinates","inflate","getCoordinateAt","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","SimpleGeometry","MultiLineString","ends_","getLayout","lineStrings","getFlatCoordinates","appendLineString","multiLineString","opt_interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","intersectsLineStringArray","Point","deflateCoordinate","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","linearRing","twiceArea","linearRings","area","LinearRing","getArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingIsClockwise","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","orientLinearRingsArray","endss","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","coordinatesss","deflateMultiCoordinatesArray","lastEnds","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","opt_transform","simplifyTransformed","getClosestPoint","opt_closestPoint","intersectsCoordinate","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","XY","XYZ","XYM","XYZM","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","getStrideForLayout","transformGeom2D","simpleGeometry","getStride","getFirstCoordinate","getLastCoordinate","nesting","getLayoutForStride","sy","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","lineStringLength","douglasPeucker","simplifiedOffset","markers","stack","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","snap","quantize","x3","y3","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","ua","navigator","userAgent","toLowerCase","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","IMAGE_DECODE","Image","decode","passive","error","BaseLayer","background_","background","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","state_","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setZIndex","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","handleSourcePropertyChange_","setSource","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","layerState","arrayLayerState","createRenderer","hasRenderer","Base","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","renderer","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxExtent","resolution","pixelRatio","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterImageWithText_","myBegin","ceil","opt_sharedData","getAnchor","hitDetectionImage","getHitDetectionImage","image","getImage","origin","getOrigin","getPixelRatio","getRotateWithView","getRotation","getScaleArray","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","stroke","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","TextPlacement","geometryWidths","overflow","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","padding","p0","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","font","textBaseline","fillKey","baseline","text","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","ImageState","renderIfReadyAndVisible","loadImage","imageState","load","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","clearRect","drawImage","err","viewState","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","rotation","renderPixel","layerExtent","renderCoordinate","pixelToCoordinateTransform","pixelCanvas","Uint8Array","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","_a","widths","heights","lineWidths","renderWidth","contextInstructions","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","setLineDash","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","restore","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","closePath","rotateWithView","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","radius","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","shared","ImageBase","getResolution","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","taintedTestContext","IconImage","canvas_","color_","imageState_","size_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getImageState","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","displacement","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","getScale","getDisplacement","setAnchor","getImageSize","iconImageSize","listenImageChange","unlistenImageChange","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","worldsAway","opt_sourceExtentWidth","sourceExtentWidth","getWorldsAway","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","viewHints","ViewHint","multiWorld","getWrapX","endWorld","world","layerIndex","clipped","css","transforms","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","setColor","setText","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","all","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userProjection","extent_1","userExtent_1","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","BaseVector","clamp","cosh","exp","log2","squaredSegmentDistance","lerp","assign","var_sources","output","property","getValues","Projection","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getMetersPerUnit","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","PROJECTIONS","fromEPSG4326","opt_output","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","add","projectionLike","addEquivalentProjections","projections","addProjections","equivalent","projection1","projection2","equalUnits","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","getUserProjection","toUserExtent","fromUserExtent","destProjection","toUserResolution","sourceUnits","userUnits","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","console","warn","measureFont","measureElement","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","getTextDimensions","baseStyle","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","executeLabelInstructions","toSize","opt_size","UNDEFINED","READY","CollectionEvent","opt_element","opt_index","Collection","unique_","unique","array_","assertUnique_","updateLength_","getArray","insertAt","elem","CollectionEventType","removeAt","setAt","opt_except","RBush","opt_maxEntries","rbush_","items_","extents","items","uid","update","getAll","getInExtent","forEach_","forEachInExtent","toJSON","rbush","adaptAttributions","attributionLike","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getInterpolate","refresh","setAttributions","setState","withCredentials","xhr","url","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","loadFeaturesXhr","addFeatures","VectorSourceEvent","opt_feature","opt_features","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","ObjectEventType","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","Fill","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","setRotation","setScale","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","RegularShape","hitDetectionCanvas_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","renderOptions_","getRadius","getRadius2","getAngle","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","CircleStyle","setRadius","Style","geometry_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setFill","setStroke","toFunction","defaultStyles","createDefaultStyle","Circle","Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","LINE","transformStringDiv","setFromArray","transform1","transform2","makeScale","compose","makeInverse","mat","transformString","abstract","uidCounter_","getUid","ol_uid","VERSION"],"sourceRoot":""}